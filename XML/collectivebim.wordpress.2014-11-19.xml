<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.0" created="2014-11-19 22:55" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>collective BIM</title>
	<link>http://collectivebim.com</link>
	<description>because BIM involves more than just you.</description>
	<pubDate>Wed, 19 Nov 2014 22:55:22 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://collectivebim.com</wp:base_site_url>
	<wp:base_blog_url>http://collectivebim.com</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>michael</wp:author_login><wp:author_email>michael@collectivebim.com</wp:author_email><wp:author_display_name><![CDATA[michael]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=4.0</generator>

	<item>
				<title>Solibri Model Checker at a high level.</title>
		<link>http://collectivebim.com/solibri-model-checker-at-a-high-level/</link>
		<pubDate>Tue, 01 Jan 2013 00:01:48 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

<a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> is not an authoring tool, but merely an awesome "model checker". Like <a href="http://usa.autodesk.com/navisworks/">Navisworks</a> it does clash detection and model comparing, but unlike Navisworks it takes advantage of the information embedded within the building information models for more than just clash detection. As an architect and now a BIM specialist, there are things that Solibri Model Checker can check for, if set up properly, that is invaluable for a firm that participates in BIM.

&nbsp;
<h3><a href="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Overview.jpg"><img class="alignnone size-large wp-image-229" alt="SMC Overview" src="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Overview-840x484.jpg" width="840" height="484" /></a></h3>
&nbsp;

[divider top="1"]
<h3>Importing into SMC</h3>
<a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> only opens models from a IFC or DWG format. The IFC format is the preferred method as I have tested out the DWG from Revit and it is inconsistent. For example, if you export as a polymesh it maps the elements to the correct IFC type, but object is made up of single unjoined surfaces. Exporting as an ACIS Solid keeps the object's faces together, but some objects don't get categorized to the correct IFC type and instead ends up in the "object" type.

&nbsp;

Importing an IFC does a great job, but you have to make sure that you are mapping your elements to the correct IFC category in Revit's Export IFC Options table.  By default, <a href="http://usa.autodesk.com/revit/">Revit</a> does not have the correct Revit categories mapped to the correct IfcType. For example, Revit has general categories like "Mechanical Equipment" and IFC is a bit more specific  like IfcChiller, IfcCondenserType, and IfcPumpType.

&nbsp;

If you need to map a custom element to the correct IFC type, then there are two options.
<ol>
<ol>
	<li>Define a subcategory under Mechanical Equipment when creating the "chiller" family, and in the Revit IFC export options you can map that subcategory to the right IFC category.</li>
	<li>Create two shared parameters inside the families that need to be mapped correctly to specific IFC Types.</li>
</ol>
</ol>
There are a few Revit Addins out there that imporve <a href="http://apps.exchange.autodesk.com/RVT/Detail/Index?id=appstore.exchange.autodesk.com%3Aifcexporterforrevit%3Aen">Revit's IFC Export</a>. I will be sure to cover those in a separate post as that subject matter can be an entire post on its own.

&nbsp;

&nbsp;

[divider top="1"]
<h3>Exporting from Revit</h3>
In my specific test, when I exported from <a href="http://usa.autodesk.com/revit/">Revit</a> a 250+ MB architectural model, it took 45-60 mins using the <a href="http://usa.autodesk.com/adsk/servlet/pc/item?id=13947462&amp;siteID=123112">Navisworks Exporter Add-in</a>. When I exported an .ifc file, it took 10 mins. Structural and Mechanical models took less than 2 minutes. For models that that had a great deal of complex geometry not native to Revit, the export took 30-45 min as an .nwc, but literally 1-2 hours to export as an .ifc. Additionally, it took 1-2 hours to import into SMC.

&nbsp;

[divider top="1"]
<h3>Model Structure</h3>
When imported into Solibri Model Checker, there are three ways to view the structure of the data in the Model Tree.

&nbsp;

<strong>Containment Hierarchy</strong>- Displays elements by Model (given a discipline), then by Level, then by IFC Object Type, then by Family Name, then by Item.

<a href="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Containment-Hierarchy.jpg"><img class="alignnone size-full wp-image-101" alt="SMC Containment Hierarchy" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Containment-Hierarchy.jpg" width="599" height="816" /></a>

&nbsp;

<strong>Component Hierarchy</strong> - Displays elements by IFC Object Type, then Family Name, then Item.

<a href="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Component-Hierarchy.jpg"><img class="alignnone size-full wp-image-100" alt="SMC Component Hierarchy" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Component-Hierarchy.jpg" width="598" height="818" /></a>

&nbsp;

<strong>Layer Hierarchy</strong> - Displays elements by Layer, then by IFC Object Type, then by Item. One issue noticed with this view is that <a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> does not merge similar layers of different models into the same folder. This may be a bug in the current version though.

<a href="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Layer-Hierarchy.jpg"><img class="alignnone size-full wp-image-105" alt="SMC Layer Hierarchy" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Layer-Hierarchy.jpg" width="599" height="819" /></a>

&nbsp;

&nbsp;

[divider top="1"]
<h3>Element Properties</h3>
In addition to the lack of knowledge out there, I think the slow adoption of Solibri Model Checker within the US is mainly due to the nuances encountered when mapping to IFC.  I want to encourage you to look beyond that because you can still use Solibri Model Checker to its fullest even if your model does not translate over perfectly.  Just like how Navisworks selects what it needs to clash via "Search Sets and Selection Sets", Solibri Model Checker has the same capability to define its own "Search Sets" but they are called Classifications.

&nbsp;

<a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> Classifications are defined just like how <a href="http://usa.autodesk.com/navisworks/">Navisworks</a> defines Search Sets, by selecting by specific objects properties.

<a href="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Info-Panel.jpg"><img class="alignnone size-full wp-image-102" alt="SMC Info Panel" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Info-Panel.jpg" width="460" height="404" /></a>

&nbsp;

&nbsp;

[divider top="1"]
<h3>Classification</h3>
When setting up custom Classifications, which is easier than setting up search sets in <a href="http://usa.autodesk.com/navisworks/">Navisworks</a>, <a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> gives you a list of elements that were and were not Classified by your filter rules. Examples of Classification that you would create are like the following:

<a href="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Classification-Panel.jpg"><img class="alignnone size-full wp-image-99" alt="SMC Classification Panel" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Classification-Panel.jpg" width="458" height="334" /></a>

&nbsp;

&nbsp;

[divider top="1"]
<h3>Model Checking - Rules</h3>
<a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> then uses Rulesets to check for things. Some Rulesets allow you to select by Component (IFC) while others allow you to select only by Classification. There are even some that allow you to put both together. This inconsistency is being address by Solibri as they are continuously updating the Rulesets.

<img class="alignnone size-full wp-image-108" alt="SMC Rulesets" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Rulesets.png" width="533" height="907" />

&nbsp;

These Rulesets are what set Solibri Model Checker apart from any other model aggregator on the market. Once the Classifications are set up correctly, you can use the rulesets for Clash Detection, Quality Assurance, Model Craft, Missing Parameters, Naming Conventions, Building Logistics, Code Compliance, and even Validation of Design Ideas.

&nbsp;

&nbsp;

[divider top="1"]
<h3>Model Checking - Parameters</h3>
The Rulesets have very specific parameters built in that are very flexible for many different scenarios. The Ruleset Parameters below are for checking for elements within a door swing and for egress analysis.

<img class="alignnone size-full wp-image-114" alt="SMC Ruleset Parameters" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Ruleset-Parameters.png" width="768" height="472" />

<a href="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Ruleset-Parameters-2.png"><img class="alignnone size-full wp-image-113" alt="SMC Ruleset Parameters 2" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Ruleset-Parameters-2.png" width="753" height="885" /></a>

&nbsp;

[divider top="1"]
<h3>Results - Annotating</h3>
Using the Door swing as an example, <a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> takes longer with finding issues than <a href="http://usa.autodesk.com/navisworks/">Navisworks</a>, but Solibri Model Checker is isolating the elements involved with the issue AND annotating it. The objects that are within the required area in front of the door are projected down onto a plane and Solibri Model Checker strikes dimensions to both elements from the door. You will notice that just because you only have 3 elements showing, your orientation in the building is not lost like in Navisworks. Solibri Model Checker slices the model at the building levels and gives you a line drawing of every floor. It also labels all Areas/Rooms and Grids. You can then add your own annotations in 3d space.

<a href="http://collectivebim.com/wp-content/uploads/2013/01/SMC-01.jpg"><img class="alignnone size-large wp-image-230" alt="SMC 01" src="http://collectivebim.com/wp-content/uploads/2013/01/SMC-01-840x550.jpg" width="840" height="550" /></a>

When you are ready to save the issue, you create a slide which saves your orientation of the model, hidden elements, and added annotations.

<a href="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Results.jpg"><img class="alignnone size-full wp-image-107" alt="SMC Results" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Results.jpg" width="424" height="269" /></a>

&nbsp;

&nbsp;

[divider top="1"]
<h3>Results - Tracking</h3>
The slide has properties of its own as it can track Decisions, Comments, Locations, Date slide created, Status, and Responsibilities.

<a href="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Issue-Details.jpg"><img class="alignnone size-full wp-image-232" alt="SMC Issue Details" src="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Issue-Details.jpg" width="404" height="584" /></a> <img class="alignnone size-full wp-image-103" alt="SMC Issue Details 02" src="http://collectivebim.com/wp-content/uploads/2012/12/SMC-Issue-Details-02.jpg" width="406" height="590" />

&nbsp;

&nbsp;

[divider top="1"]
<h3>Results - Presenting</h3>
These slides can then be added to a "Presentation" and you can play through the slides like a slide show.

<a href="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Presentation.jpg"><img class="alignnone size-full wp-image-231" alt="SMC Presentation" src="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Presentation.jpg" width="396" height="929" /></a>

&nbsp;

[divider top="1"]
<h3>Results - Reporting</h3>
This Presentation can then be reported out as a pdf and csv doc with customizable templates.

In addition to the rulesets, you can also do an Information Takeoff and Report it.

<a href="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Report.jpg"><img class="alignnone size-full wp-image-234" alt="SMC Report" src="http://collectivebim.com/wp-content/uploads/2013/01/SMC-Report.jpg" width="751" height="605" /></a>

&nbsp;

[divider top="1"]
<h3>Solibri Model Viewer</h3>
The checked <a href="http://www.solibri.com/solibri-model-checker.html">Solibri Model Checker</a> model can be saved as an .smc and opened by the free Solibri Model Viewer. The Model Viewer does not give you access to the Rulesets or Ruleset Parameters, but maintains the ability to review Check Results, Takeoffs, Presentations, Slides, and Annotations.

&nbsp;

&nbsp;

[divider top="1"]
<h3>Limitations</h3>
Current limitations found in Solibri Model Checker:
<ul>
	<li>Inability to add slides to an existing presentation.</li>
	<li>Inability to add the "newest" created slides to a new presentation.</li>
	<li>Inability to have a user categorization of results.</li>
	<li>Solibri Model Checker automatically creates folders for you based off of things unknown to the user. Most of the time it is the levels of the objects that are in the first column of "checked components".</li>
	<li>Would be nice to completely reorganize the results more like the way <a href="http://usa.autodesk.com/navisworks/">Navisworks</a> works.</li>
	<li>Inability to add a single slide to multiple issues/results. So grouping 5 issues and using 1 slide to tie them all together.</li>
	<li>Inability to group the ITO so that the scrolling is not tremendously long.</li>
	<li>Inability to add custom fields to Slides that can be reported out.</li>
	<li>Currently the location is available in the Slide and can be reported out, but it would be nice to have the "types" of elements involved in the clash so that ultimately you could report out that this issue involves "doors, light fixtures, etc"</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[Probably the most underestimated analysis tool out there would be the Solibri Model Checker. The biggest hurdle for users is setting up a good IFC export of their model in order to get the most out of the software. Solibri Model Checker is not an authoring tool, but merely an awesome "model checker". Like Navisworks it does clash detection and model comparing, but unlike Navisworks it takes advantage of the information embedded within the building information models for more than just clash detection.]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date>2013-01-01 00:01:48</wp:post_date>
		<wp:post_date_gmt>2013-01-01 00:01:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>solibri-model-checker-at-a-high-level</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[Analysis]]></category>
		<category domain="category" nicename="bim"><![CDATA[BIM]]></category>
		<category domain="category" nicename="coordination"><![CDATA[Coordination]]></category>
		<category domain="post_tag" nicename="ifc"><![CDATA[IFC]]></category>
		<category domain="post_tag" nicename="solibri"><![CDATA[Solibri]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_title</wp:meta_key>
			<wp:meta_value><![CDATA[Catalyst Document Title]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_description</wp:meta_key>
			<wp:meta_value><![CDATA[Catalyst Description]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[Catalyst Keyword, Catalyst Keywords]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Solibri Model Checker]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Using Solibri Model Checker for Clash Detection, Quality Assurance +..]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Review of Solibri Model Checker and its use to check for clashes, model quality, model craft, quantity takeoff, code analysis. Comparing it to Navisworks.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[hello-world]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[230]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3498</wp:comment_id>
			<wp:comment_author><![CDATA[club.enzymekits.com]]></wp:comment_author>
			<wp:comment_author_email>jonnieneill@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://club.enzymekits.com/</wp:comment_author_url>
			<wp:comment_author_IP>108.162.212.102</wp:comment_author_IP>
			<wp:comment_date>2014-10-24 00:08:55</wp:comment_date>
			<wp:comment_date_gmt>2014-10-24 04:08:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am genuinely thankful to the owner of this web page who 
has shared this great article at at this place.]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1414123735.4950659275054931640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Rumbelow]]></wp:comment_author>
			<wp:comment_author_email>matt@cadimagegroup.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.148.145.147</wp:comment_author_IP>
			<wp:comment_date>2013-01-08 07:17:01</wp:comment_date>
			<wp:comment_date_gmt>2013-01-08 12:17:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A hearty congratulations Mr McCune for your fine review of Solibri.
And the best of luck for meeting your goals for the new blog (and hence avoiding a punch in the face).

I trust you are OK with me referring (and recommending) your blog on mine. http://blog.solibri.com.au/

Look forward to more of your postings.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357647421.38185596466064453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357919490.8055140972137451171875;s:7:"message";s:46:"michael changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Solibri Support Team]]></wp:comment_author>
			<wp:comment_author_email>support@solibri.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.30.179.97</wp:comment_author_IP>
			<wp:comment_date>2013-01-11 10:29:49</wp:comment_date>
			<wp:comment_date_gmt>2013-01-11 15:29:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dear Mr. McCune,
Thank you for your review of Solibri Model Checker. We at Solibri Inc. would like to add few comments to correct some of the misunderstandings concerning SMC’s functionalities and at the same time would be sharing few tips to how to make the most of SMC usage. 

Element Properties
In addition to the lack of knowledge out there, I think the slow adoption of Solibri Model Checker within the US is mainly due to the nuances encountered when mapping to IFC. I want to encourage you to look beyond that because you can still use Solibri Model Checker to its fullest even if your model does not translate over perfectly. Just like how Navisworks selects what it needs to clash via “Search Sets and Selection Sets”, Solibri Model Checker has the same capability to define its own “Search Sets” but they are called Classifications.

Comment: The idea of SMC is that a Ruleset has rules tailored for a given purpose. In the case of intersection checking the rules have filters that define what to check. These filters are used to pick the components to check and the ones to check against. These are kind of implicit selection sets, but the user doesn’t need to modify them per project. Furthermore, SMC has a very good way of finding the checking results (e.g. intersections) of specific components among all the checking results. Here you can use a selection set to filter checked components and to show the results of only selected components.

Model Checking – Rules
Solibri Model Checker then uses Rulesets to check for things. Some Rulesets allow you to select by Component (IFC) while others allow you to select only by Classification. There are even some that allow you to put both together. This inconsistency is being address by Solibri as they are continuously updating the Rulesets.

Comment: As mentioned earlier, the Rulesets have rules that are tailored for a given purpose. Rule parameters can be configured based on different properties and/or Classifications. Newest version of SMC allows users to select checked components based on any property value such as type, size, location, etc. or Classifications. This is seen as flexibility rather than inconsistency, while updating Rulesets is meant for adding value to their functionality.

Results – Reporting
This Presentation can then be reported out as a pdf and csv doc with customizable templates.
In addition to the rulesets, you can also do an Information Takeoff and Report it.

Comment: The presentation is also a means of creating a BCF file which stands for BIM Collaboration Format. It is a way communicating and resolving design issues between a BIM coordinator and members of a design team. A BCF file can be created both with SMC and SMV. A BIM coordinator opens a single or multiple IFC models, investigates checking results and analyzes issues, and then prepares a presentation from checking results. A checked model is saved as a SMC model (.smc) and sent to the related design team member(s). Members of design team use Solibri Model Viewer SMV (or SMC) to open the SMC model and go through saved presentation(s).  Each designer checks related issues, makes comments as suitable, and then creates a report as a BCF. The BCF file is then sent back to the BIM coordinator which can be used later to update the original presentation. A BIM coordinator opens the original saved SMC model (.smc), updates the original presentation using the imported BCF file(s) from design team members, and goes through their comments. The new saved SMC model (.smc) can be sent back to design team members for further comments or used in project meetings. Also, a report can be created including all comments. The BCF cycle can be repeated as required.

Limitations: Current limitations found in Solibri Model Checker:

•  Inability to add slides to an existing presentation -&gt; Yes, you can add new slides to an existing presentation in the Communication View.

•  Inability to add the “newest” created slides to a new presentation. -&gt; Yes, it is possible to add “newest” created slides to a new presentation, it is also possible to copy a slide from an existing presentation and paste it in a new presentation.

•  Inability to have a user categorization of results. -&gt; Some rules allow users to set a categorization system.

•  Solibri Model Checker automatically creates folders for you based off of things unknown to the user. Most of the time it is the levels of the objects that are in the first column of “checked components”. -&gt; Could you elaborate further?

•  Inability to add a single slide to multiple issues/results. So grouping 5 issues and using 1 slide to tie them all together. -&gt; Yes, it is possible to select multiple issues/results (simply by using Ctrl button while clicking the required issues) and add one slide that shows all of them together.

•  Inability to group the ITO so that the scrolling is not tremendously long. -&gt; It mainly depends on the ITO definition that is created and used for gathering the information takeoff.

•  Inability to add custom fields to Slides that can be reported out. -&gt; It is possible to add as many custom fields to slides (such as adding comments in the 3D view of an existing slide) using ‘Edit Issue’ command and then ‘Update’ the slide. 


BR
Solibri Support]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357918189.7003009319305419921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357919698.6745369434356689453125;s:7:"message";s:46:"michael changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[michael]]></wp:comment_author>
			<wp:comment_author_email>michael@collectivebim.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.41.177.108</wp:comment_author_IP>
			<wp:comment_date>2013-01-11 10:56:04</wp:comment_date>
			<wp:comment_date_gmt>2013-01-11 15:56:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your kind remarks Matt!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1357919764.8755300045013427734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[michael]]></wp:comment_author>
			<wp:comment_author_email>michael@collectivebim.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.41.177.108</wp:comment_author_IP>
			<wp:comment_date>2013-01-12 21:14:44</wp:comment_date>
			<wp:comment_date_gmt>2013-01-13 02:14:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[BR,

Thanks for your comments and for adding value to the review. Most of the "misunderstandings" you have pointed out derived from conversations with Solibri salesmen and from me working with the software. After reading through your comments, I can see that some of my statements on functionality and limitations could use some further clarification. Maybe then you can verify whether I am way off base or at least that it is a current limitation that will be addressed. My purpose in pointing out the great things SMC does along with the things it does not do well is not for balancing the review, but merely for offering up my thoughts on how the software can become stronger and more usable.
.
.
<strong>Model Checking – Rules</strong>
(Original): Solibri Model Checker then uses Rulesets to check for things. Some Rulesets allow you to select by Component (IFC) while others allow you to select only by Classification. There are even some that allow you to put both together. This inconsistency is being address by Solibri as they are continuously updating the Rulesets.

(Solibri's Comment): As mentioned earlier, the Rulesets have rules that are tailored for a given purpose. Rule parameters can be configured based on different properties and/or Classifications. Newest version of SMC allows users to select checked components based on any property value such as type, size, location, etc. or Classifications. This is seen as flexibility rather than inconsistency, while updating Rulesets is meant for adding value to their functionality.

(My Comment): When reviewing the two rulesets that I originally found the inconsistency in, the "Component Distance" and "General Intersection" rulesets, I noticed that the rule's parameters have been updated. It is nice to see that these were updated recently to both include the ability to select by property and not just by component type.
.
.
.
.
<strong>Limitations:</strong> Current limitations found in Solibri Model Checker:

(Original)• Inability to add slides to an existing presentation

(Solibri's Comment) Yes, you can add new slides to an existing presentation in the Communication View.

(My Comment) As you mentioned, it is possible to add a new slide to an existing presentation by right clicking inside an existing presentation and selecting "Add Slide." This adds the current view as a slide; however there is no way to selectively add existing slides that are not in a presentation already. You have to do it one at a time by going to the Checking tab and selecting the slide in the Results panel. Once the camera has updated to the slide, you then have to switch back to the Communication tab, already be in the presentation you want to add the slide to, then right click and select "Add Slide." If you have added 10 new slides that you want to include in an existing presentation, you would either have to do the operation above 10x, or you would have to create a new presentation that contains every slide you have added and selectively delete the ones you do not want to include.
.
.
.
.
(Original)• Inability to add the “newest” created slides to a new presentation.

(Solibri's Comment) Yes, it is possible to add “newest” created slides to a new presentation, it is also possible to copy a slide from an existing presentation and paste it in a new presentation.

(My Comment) Can you explain how to do this? When I update a model and recheck the model with the same rulesets I have loaded, say I add 25 slides. When I create a new presentation and select the option to add slides "From Checking Results" it has in parenthesis the total number of slides I have created (200+) and not the 25 that I just added.
.
.
.
.
(Original)• Inability to have a user categorization of results.

(Solibri's Comment) Some rules allow users to set a categorization system.

(My Comment) Yes the "Property Rule Template with Component Filters" does allow the user to customize the categorization of results. It would be amazing if that option was available for most of the rulesets, especially the "Distance Between Components" and "General Intersection" rulesets. It would also be nice if "Classification" was an option to select for the categorization of results.
.
.
.
.
(Original)• Solibri Model Checker automatically creates folders for you based off of things unknown to the user. Most of the time it is the levels of the objects that are in the first column of “checked components”.

(Solibri's Comment) Could you elaborate further?

(My Comment)  This limitation ties in with the limitation above and could be addressed the same way. To further explain in an actual example, when reviewing the Results after checking a ruleset, I wish there were more options given to how the issues will be grouped. For instance, I am wanting to check for clearances between All Elements in a Classification of "Sanitary Piping" and All Elements in "Framing". "Sanitary Piping" includes Pipes and Pipe Fittings while "Framing" includes Beams, Columns, and Members. No matter which order I check them in, whether Framing is Source or Target, the issues are always sorted by Structural Elements Beam, Column, or Member. I would like the issues to group by "Sanitary Piping", then by Level, then by Beam, Column, or Member. To take it further, if I included the other systems of "Storm Drain" and "Vent", I would expect to have three folders after the clash is ran, "Sanitary", "Storm Drain", and "Vent". Then inside of those folders be the same folder structure mentioned. 
.
.
.
.
(Original)• Inability to add a single slide to multiple issues/results. So grouping 5 issues and using 1 slide to tie them all together.

(Solibri's Comment) Yes, it is possible to select multiple issues/results (simply by using Ctrl button while clicking the required issues) and add one slide that shows all of them together.

(My Comment) Though it is possible to select multiple issues/results and add one slide that shows all of them together, there is no way to know that the one slide is for each of those say 10 issues. That is because even though you have the 10 issues selected, a slide icon is only added to the first issue of the 10. If there was a grouping that happened or some sort of association between the issues to let you know that that slide includes multiple issues, it would be more helpful when navigating and returning to those issues for further annotations. 
.
.
.
.
(Original)• Inability to group the ITO so that the scrolling is not tremendously long.

(Solibri's Comment) It mainly depends on the ITO definition that is created and used for gathering the information takeoff.

(My Comment) Sure, I am mainly referring to the ability to group by properties just like how you can already sort by properties. For example, a navigating a Spaces ITO definition would be easier if you can group by level.
.
.
.
.
(Original)• Inability to add custom fields to Slides that can be reported out.

(Solibri's Comment) It is possible to add as many custom fields to slides (such as adding comments in the 3D view of an existing slide) using ‘Edit Issue’ command and then ‘Update’ the slide.

(My Comment) Though it is possible to add text as comments to slides, this is reported out as a series of comments on a slide. I am referring to the ability to add more fields to the slides that can ultimately be reported out. For example, a custom issue #, or properties of the objects that are involved in the isssue. This can be useful to report out the object id's or object types of the elements involved for tracking purposes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>3</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1358043284.266686916351318359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[CollectiveBIM: A new BIM blog reviews Solibri Model Checker | ThinkBIM™ by REVITALL Systems]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://revitall.wordpress.com/2013/02/13/collectivebim-a-new-bim-blog-reviews-solibri-model-checker/</wp:comment_author_url>
			<wp:comment_author_IP>72.232.113.11</wp:comment_author_IP>
			<wp:comment_date>2013-04-08 05:25:17</wp:comment_date>
			<wp:comment_date_gmt>2013-04-08 09:25:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://collectivebim.com/solibri-model-checker-at-a-high-level/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365413117.5576610565185546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Fixing oversimplification of complex geometry in Solibri.</title>
		<link>http://collectivebim.com/oversimplification-geometry-solibri/</link>
		<pubDate>Wed, 02 Jan 2013 02:34:04 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=138</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

When Solibri's <a href="http://www.solibri.com/solibri-model-viewer.html">Model Viewer</a> and <a href="http://www.solibri.com/solibri-model-checker.html">Model Checker</a> open and import model files, the geometry is simplified into triangulated faces. This allows the program to quickly render and check the geometry, but this sometimes leads to less than desirable results when dealing with complex geometry. By default, Solbri places a face count limit on the simplification process of complex geometry. Depending on how complex your geometry is, the result can cause your geometry to have missing faces or erode at its edges.

&nbsp;

The images below show an example of a rippled Wall. The rippled surface was first created in Grasshopper then imported into Revit as an in-place mass. Using the Wall by Face tool, a wall was hosted off of this highly rippled surface. After imported into SMC via IFC, the wall looked like it was a test surface for a dull hack saw. The window opening were not completely formed, the edges were ill-formed, and a lot of the wall had triangular holes.

&nbsp;

<a href="http://collectivebim.com/wp-content/uploads/2013/01/before.jpg"><img class="alignnone size-large wp-image-236" alt="before" src="http://collectivebim.com/wp-content/uploads/2013/01/before-840x465.jpg" width="840" height="465" /></a>

&nbsp;

&nbsp;

If your geometry consists of highly warped surfaces, an extreme amount of perforations, or dense ripples that require a very precise approximation, then you may need to tell Solibri to increase the face count of its geometry simplification process.

&nbsp;

This can be done by editing the vmoptions file located in Program Files\Solibri\SMCv8\Solibri Model Checker using Notepad. Add the following on a new line at the end of the document:
<pre>-Dsimplify-geometry-count=10000000</pre>
&nbsp;

Save the vmoptions file and restart Solibri. For the setting to take affect, you will have to re-import the geometry back into the model. You may notice a little hit in performance, but on the flip side you gain a more accurate representation of your complex geometry without distortion.

&nbsp;

The images below show the result of editing the vmoptions file.

<a href="http://collectivebim.com/wp-content/uploads/2013/01/after.jpg"><img class="alignnone size-large wp-image-237" alt="after" src="http://collectivebim.com/wp-content/uploads/2013/01/after-840x463.jpg" width="840" height="463" /></a>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>138</wp:post_id>
		<wp:post_date>2013-01-01 21:34:04</wp:post_date>
		<wp:post_date_gmt>2013-01-02 02:34:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>oversimplification-geometry-solibri</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bim"><![CDATA[BIM]]></category>
		<category domain="post_tag" nicename="solibri"><![CDATA[Solibri]]></category>
		<category domain="category" nicename="tips-tricks"><![CDATA[Tips &amp; Tricks]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[236]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[solibri]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[oversimplification of complex geometry in Solibri. - collective BIM]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Importing complex geometry into Solibri Model Viewer and Solibri Model Checker without oversimplifying its representation by editing the vmoptions file.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[Fixing oversimplification of complex geometry in Solibri. http://wp.me/p2ZTR1-2e]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Using the &quot;Save Hide/Required Attributes&quot; Viewpoints Setting in Navisworks</title>
		<link>http://collectivebim.com/save-hiderequired-navisworks/</link>
		<pubDate>Thu, 07 Mar 2013 05:36:30 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=243</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

When trying to set up a viewpoint inside of Navisworks, you often want to Hide other elements, systems, and trades that are around the specific clash you are calling out.  In hopes to help speed this process up, I tested out the "Save Hide/Required Attributes" setting for viewpoints.  This setting is in the Global Options window under Viewpoints.  This seems like a great thing, but without understanding its limitations, you can really waste a lot of time by having to redo a lot of previously saved Viewpoints.

&nbsp;

<img class="size-full wp-image-244 aligncenter" title="Viewpoints Settings" alt="Save Hide / Required Attributes" src="http://collectivebim.com/wp-content/uploads/2013/03/Viewpoint-Settings.jpg" width="664" height="637" />

&nbsp;

As you know there are several ways to "Select" elements in Navisworks in order to "Hide" them:

[list style="idea"]
<ul>
	<li>By Element</li>
	<li>By Property (Category, Level, Etc)</li>
	<li>By Selection Set</li>
	<li>By Search Set</li>
	<li>By File (NWD,NWC,Non-native)</li>
</ul>
[/list]

Am I missing any? If you also consider that there are two ways to hide, "Hide Selected" and "Hide Unselected". That means that there are actually 14 ways to Hide elements not including combinations of selection methods.

&nbsp;

Now with the "Save Hide/Required Attributes" box checked in the Viewpoints settings, you would figure by the title of the setting that it would save what you have Hidden/Shown no matter HOW you hide elements.  Not so.... As noted in this <a href="http://forums.autodesk.com/t5/Autodesk-Navisworks/losing-saved-viewpoints-hidden-attributes/td-p/3571594">unanswered forum post</a> on one of Autodesk's Discussion groups from late last year, this can lead to some serious frustration and rework to fix the viewpoints when it is finally realized further into the project.

&nbsp;
<p style="text-align: center;"><a href="http://collectivebim.com/wp-content/uploads/2013/03/Unanswered-Forum-Post.jpg"><img class="size-full wp-image-245 aligncenter" title="Unanswered Forum Post" alt="Unanswered Forum Post" src="http://collectivebim.com/wp-content/uploads/2013/03/Unanswered-Forum-Post.jpg" width="959" height="879" /></a></p>
&nbsp;

If you really think about it, the reason this happens makes quite a lot of sense.  When you hide an element, Navisworks remembers that elements GUID.  If a model is updated and that GUID remains in the model, it stays hidden. If there are new GUID's that are created, which is guaranteed to happen as models progress and elements are added, Navisworks has no saved Hidden Attribute of those new GUID's.  This ends up causing your viewpoint to look like a hot mess, potentially obstructing your view of the object you are calling attention to.

So do any of the Hide methods work?  Is there any way that we can keep those new added elements from appearing in our scene?  It would make a lot of sense that when selecting By Property, By Search Set, or By File new elements would stay hidden since it seems like they all work like a Search Set.  By that I mean, look through the model, if it contains this property or is in this Search Set or is in this file then Hide it!   However, this is not how it works unfortunately.   Hopefully this could be addressed in a future release of Navisworks, but for now I would steer clear of using the Save Hide Attribute in this way.

&nbsp;

There is some hope for this setting though.  The only selection method found to work that actually keeps new unwanted elements Hidden and wanted elements Shown is the 'By File" method.  However, there are still inconsistencies with this method!  It only works if you select an NWD.  For some reason, when selecting NWC's and other Non-native file formats like IFC and DWG, the setting does not work as expected. If additional files/models are added underneath the NWD's they will be hidden as they are a child of the NWD.  So even though it does not work for all formats, you can wrap the disciplines up into NWDs like so...

&nbsp;
<p style="text-align: center;"><a href="http://collectivebim.com/wp-content/uploads/2013/03/Selection-Tree.jpg"><img class="aligncenter size-full wp-image-253" title="Selection Tree" alt="Selection Tree" src="http://collectivebim.com/wp-content/uploads/2013/03/Selection-Tree.jpg" width="178" height="174" /></a></p>
The instance where this does not work again deals with the parent child relationship of the file linking strategy.  In the example selection tree above, if I were to select the Arch, MEP, and Struct NWD's without selecting the DESIGN.nwd that they are contained within and Hide them, then any new file I add later within the DESIGN.nwd would not be hidden.  On the contrary, if I would have selected the DESIGN.nwd and not any of the NWD's within it and Hidden it, then any new file I add later WOULD be hidden. This is essentially why NWC's and other formats do not work as standalone files.  Try to wrap them up inside an NWD.

&nbsp;

There are also some added benefits to using this setting when you are wanting to capture the Clash Detective Display Style of "Dim Other."  As noted in this <a href="http://www.augi.com/library/exploring-options-in-navisworks">blog post on AUGI</a>,  when this setting is enabled, your viewpoint will ghost all other elements that are not clashing.

&nbsp;

If you still want to use this setting in your workflow, I recommend you preset some Viewpoints that can get you back to a saved state of the model.  Having these viewpoints will allow you to "reset" the colors of the elements to your color scheme, if you are coloring elements by trade, system, etc.  Having saved viewpoints of entire or select trades hidden is also extremely helpful when documenting new clashes between trades.  For example when documenting an issue between Mechanical and Structure, you can click on your saved Viewpoint to just show Mechanical and Structure, then click back on your issue in the Clash Detective results tab, and you then already have the colors reset and the appropriate trades visible.

&nbsp;

I am curious to know if anyone is actually using this setting and how if not described above.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2013-03-07 00:36:30</wp:post_date>
		<wp:post_date_gmt>2013-03-07 05:36:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>save-hiderequired-navisworks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[Analysis]]></category>
		<category domain="category" nicename="coordination"><![CDATA[Coordination]]></category>
		<category domain="post_tag" nicename="navisworks"><![CDATA[Navisworks]]></category>
		<category domain="category" nicename="tips-tricks"><![CDATA[Tips &amp; Tricks]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[navisworks]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Save Hide/Required Attributes Viewpoints Setting in Navisworks]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[So do any of the Hide methods work in Navisworks? Is there any way that we can keep those new added elements from appearing in our scene? Not really]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[253]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[Using the "Save Hide/Required Attributes" Viewpoints Setting in Navisworks http://wp.me/p2ZTR1-3V]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3103341</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[Conaill]]></wp:comment_author>
			<wp:comment_author_email>coinall@yahoo.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://Savedviewpointhidingobjects</wp:comment_author_url>
			<wp:comment_author_IP>95.44.199.41</wp:comment_author_IP>
			<wp:comment_date>2013-11-25 18:31:26</wp:comment_date>
			<wp:comment_date_gmt>2013-11-25 23:31:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I had a similar problem and found something that works to save viewpoints with hidden objects.
1. Click on right mouse button in main window.
2. Select Interface, then viewpoint defaults, check mark on save Hide/required attribute  and Override Material boxes
3. Right click on name of viewpoint in saved viewpoints window
4. Click update.
5. When you save, exit and come back into file the hidden objects remain hidden on saved viewpoint.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385422286.2115399837493896484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387825813.9890630245208740234375;s:7:"message";s:46:"michael changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>Grasshopper &amp; Revit Interoperability: Adaptive Components via Chameleon</title>
		<link>http://collectivebim.com/grasshopper-revit-interoperability-chameleon/</link>
		<pubDate>Thu, 18 Apr 2013 01:46:04 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=278</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><a href="http://www.hilojacobs.com/?page_id=464"><img class="size-full wp-image-294 aligncenter" alt="Chameleon_logo" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_logo2.jpg" width="147" height="148" /></a></p>
The need to operate between multiple design technologies is growing everyday. New apps are constantly arriving and it is sometimes hard to keep up. <a href="http://aec-apps.com/">AEC-APPS</a> <em>(plug)</em> helps out a lot, but communicating between different platforms is often a challenge usually resulting to importing geometry that cannot be edited except within its native format. In the next series of posts, I am going to elaborate a bit on what tools out there can help us operate between Rhino/Grasshopper and Revit. Honestly, they all do a great job with getting the information over. All of them use very different means to do it, and I am always impressed at how robust and accurate the results are. Since they all can place Adaptive Components, I will start there. I will go through each tool and elaborate a bit on what it takes to set it up, transfer it, as well as share the files to do it yourself. Note that some of the plugins that I will cover are either not free or not publicly available, so you may not be able to repeat the steps. The first tool will be <a href="http://www.hilojacobs.com/?page_id=464">Chameleon</a>.

&nbsp;
<h3>About Chameleon:</h3>
<a href="http://www.hilojacobs.com/?page_id=464">Chameleon </a>is both a plugin for Grasshopper and an Add-in for Revit. Developed by Hiroshi Jacobs, a lot of its roots grew out of his work at the GSD at Harvard especially the Curtain Grid tools. Since the GSD, the app has grown to include a workflow between Grasshopper and Revit using gbxml. Knowing Hiroshi personally, his aim for the tools as they continue to expand is to make it as approachable and streamlined as it can be. Making it easier for non-techie designers to pick up the tool and get what they want done. The workflow, as you will see with the Adaptive Components, makes it to where you do not have to save a file nor use any other software.

&nbsp;

My one negative comment about the workflow is that it is not well suited for multiple people exchanging geometry together. For example, you cannot have one person generating Grasshopper data and another person receiving that data in Revit. The transfer HAS to be on the same machine and happen immediately. You cannot update the Grasshopper data and come in tomorrow to load in the new work done. My second negative comment, I lied, is that you cannot update the location of an Adaptive Component, but rather delete it and replace it. If you had any tags or other instance parameters added to the element, it would be lost.

&nbsp;

&nbsp;
<h3>Chameleon - GH:</h3>
On the Grasshopper side, it contains tools for transferring geometry both to and from Revit. Tools for transferring geometry to Revit are currently limited to Adaptive Components. In the Grasshopper plugin, there are currently four sections. Interoperability that deals with transferring between Revit, Simulation that deals with Sightlines, Utilities that deal with surface operations, and View that deals with camera positioning.
<p style="text-align: justify;"><img class="size-full wp-image-280" style="border: 0px; margin: 0px;" alt="Chameleon_GH_Revit Tools" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_GH_Revit-Tools.jpg" width="226" height="199" /> <img class="alignnone size-full wp-image-281" style="margin: 0px; border: 0px;" alt="Chameleon_GH_Simulation Tools" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_GH_Simulation-Tools.jpg" width="139" height="100" /> <img class="alignnone size-full wp-image-282" style="border: 0px; margin: 0px;" alt="Chameleon_GH_Utility Tools" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_GH_Utility-Tools.jpg" width="165" height="147" /> <img class="alignnone size-full wp-image-283" style="border: 0px; margin: 0px;" alt="Chameleon_GH_View Tools" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_GH_View-Tools.jpg" width="168" height="172" /></p>
&nbsp;

&nbsp;
<h3>Chameleon - RVT</h3>
On the Revit addin, there are two sections. Three tools that deal with transfer to Grasshopper, and two tools for Curtain Grid operations. We will dive further into the Grasshopper to Revit workflow tools, but in no way is this to put more focus on those tools. The Curtain Grid tools are actually very powerful and allow you to create useful grid divisions that honestly should be built into Revit in the first place.

<img class="size-full wp-image-285 aligncenter" alt="Chameleon_Revit Tools" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_Revit-Tools.jpg" width="440" height="385" />

.
<h3>Grasshopper to Revit Workflow: Placing Adaptive Components</h3>
Beginning with a straightforward [button link="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon.gh" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]Grasshopper Definition[/button] the End Points of some structure curves are streamed into Chameleon's Adaptive Component component. The Parameters input requires the Adaptive Component family inside of Revit to have a "Number" Instance Parameter, which is left out for this first go.

&nbsp;

<img class="size-full wp-image-320 aligncenter" alt="Chameleon_GH Def" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_GH-Def.jpg" width="1532" height="543" />

<img class="size-full wp-image-314 aligncenter" style="text-align: justify;" alt="Chameleon_GH_Revit Tools_AdaptComp" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_GH_Revit-Tools_AdaptComp.jpg" width="323" height="254" />

&nbsp;

&nbsp;

Once the Component is set to Activate, a window pops up telling you to activate the Adaptive Component in Revit.

&nbsp;

<img class="size-full wp-image-279 aligncenter" alt="Chameleon_GH Window" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_GH-Window.jpg" width="516" height="238" />

&nbsp;

&nbsp;

&nbsp;

Once clicked, a window pops up allowing you to select from all the Adaptive Components you have loaded in the project. I used this 4 point  [button link="http://collectivebim.com/wp-content/uploads/2013/04/4_Pt_Plane_01.rfa" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]Adaptive Component (rvt 2013)[/button] in the images below.

&nbsp;

<img class="size-full wp-image-287 aligncenter" alt="Chameleon_Revit Window" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_Revit-Window.jpg" width="860" height="710" />

&nbsp;

&nbsp;

Once selected, the add-in establishes a link with the Grasshopper components, transfers a gbxml file, parses the gbxml file very quickly, and places the adaptive component using the points we streamed into the Grasshopper component.

<strong>NOTE: What ever units you have set inside of Grasshopper, is the scale the components are placed inside the project. </strong>

<img class="size-full wp-image-286 aligncenter" alt="Chameleon_Revit Window Wait" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_Revit-Window-Wait.jpg" width="510" height="330" />

&nbsp;

<img class="size-full wp-image-291 aligncenter" alt="Chameleon_Revit_Adpt_Placed2" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_Revit_Adpt_Placed2.jpg" width="764" height="713" />
<img class="size-full wp-image-332 aligncenter" alt="Chameleon_Revit_Adpt_Placed" src="http://collectivebim.com/wp-content/uploads/2013/04/Chameleon_Revit_Adpt_Placed1.jpg" width="924" height="740" />

&nbsp;

&nbsp;
<h3></h3>
&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date>2013-04-17 21:46:04</wp:post_date>
		<wp:post_date_gmt>2013-04-18 01:46:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grasshopper-revit-interoperability-chameleon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="chameleon"><![CDATA[Chameleon]]></category>
		<category domain="post_tag" nicename="grasshopper"><![CDATA[Grasshopper]]></category>
		<category domain="category" nicename="interoperability"><![CDATA[Interoperability]]></category>
		<category domain="post_tag" nicename="revit"><![CDATA[Revit]]></category>
		<category domain="post_tag" nicename="rhino"><![CDATA[Rhino]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[294]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[chameleon]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[New Post on Grasshopper & Revit Interoperability: Adaptive Components via Chameleon http://wp.me/p2ZTR1-4u]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3418937</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3103341</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Grasshopper &amp; Revit Interoperability: Adaptive Components via Hummingbird / Whitefeet</title>
		<link>http://collectivebim.com/grasshopper-revit-interoperability-hummingbird/</link>
		<pubDate>Tue, 23 Apr 2013 01:47:52 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=339</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

<img class="size-full wp-image-382 aligncenter" alt="hummingbirds" src="http://collectivebim.com/wp-content/uploads/2013/04/hummingbirds3across.png" width="480" height="160" />

Now that we <span style="font-size: 13px;">have tested out </span><a style="font-size: 13px;" href="http://www.hilojacobs.com/?page_id=464" target="_blank">Chameleon</a><span style="font-size: 13px;"> in the </span><a style="font-size: 13px;" href="http://collectivebim.com/grasshopper-revit-interoperability-chameleon/" target="_blank">last post</a><span style="font-size: 13px;">, lets look at how </span><a style="font-size: 13px;" href="http://ghhummingbird.wordpress.com/" target="_blank">Hummingbird</a><span style="font-size: 13px;"> works. To be fair, I am going to use the same data set from Grasshopper and place the same Adaptive Component.</span>

&nbsp;

&nbsp;
<h3>About Hummingbird:</h3>
Hummingbird is a set of components, a plugin, for Grasshopper created by Tim Meador. The set includes components for creating datums like Levels and Grids, placing/drawing both loadable and system families, and includes geometry creation methods like lofting. Below are the required inputs to place an Adaptive Component. In comparison to Chameleon, it requires an additional four inputs which are mainly used to locate the Excel file, define the Tab in Excel, and reference an Adaptive Component already loaded into the Revit project. With Excel open, you just need to set the toggle to True to write the data to excel.

&nbsp;

<img class="wp-image-342 alignnone" style="font-size: 13px;" alt="Hummingbird_GH" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_GH.jpg" width="178" height="362" /><img class="wp-image-348 alignright" alt="Hummingbird_GH2" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_GH2.jpg" width="493" height="351" />

&nbsp;

&nbsp;

All the components write data in a pseudo-language to an Excel document. Every data branch in Grasshopper is written as a Row in Excel. Additional rows are created for defining the Revit command like setting the Adaptive Component, editing a parameter of a family, etc. This pseudo-language is then interpreted by the <a href="http://www.whitefeet.com/" target="_blank">Whitefeet </a>Revit Add-in.
<p style="text-align: center;"><img class=" wp-image-341 aligncenter" alt="Hummingbird_Excel" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Excel.jpg" width="986" height="431" /></p>
&nbsp;

&nbsp;
<h3>About Whitefeet:</h3>
The <a href="http://www.whitefeet.com/" target="_blank">Whitefeet</a> add-in is developed by Mario Guttman. There are a number of very powerful tools that are generally independent and address a very specific need, but one of these tools is the "Model Builder." The Model Builder was developed to import and export Revit elements in a way that allows geometry exchange with other programs. One of these programs is Rhino/Grasshopper via Excel. For more information on the tools, check out <a href="http://whitefeettools.wordpress.com/" target="_blank">Mario's blog</a>.

<img class="wp-image-343 alignleft" style="font-size: 13px;" alt="Hummingbird_Model Builder" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Model-Builder.jpg" width="294" height="327" />

<img class="wp-image-358 alignnone" style="font-size: 13px;" alt="modelbuilderdiagram" src="http://collectivebim.com/wp-content/uploads/2013/04/modelbuilderdiagram.jpg" width="460" height="352" />

&nbsp;
<h3></h3>
&nbsp;
<h3>Grasshopper to Revit Workflow: Placing Adaptive Components</h3>
Using the same [button link="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird.gh" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]Grasshopper Definition[/button] used for testing the <a title="Grasshopper &amp; Revit Interoperability: Adaptive Components via Chameleon" href="http://collectivebim.com/grasshopper-revit-interoperability-chameleon/" target="_blank">Chameleon workflow</a>, the Hummingbird Adaptive Component component is activated to write to the [button link="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird.xlsx" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]Excel File[/button]

&nbsp;
<h3><img class="wp-image-356 aligncenter" style="font-size: 13px; text-align: center;" alt="Hummingbird_GH3" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_GH3.jpg" width="1101" height="347" /></h3>
&nbsp;

&nbsp;

&nbsp;

Line by line each Adaptive Component, its Element ID, and Adaptive Point locations are written in Excel on the specified Tab name.

<img class="alignnone size-large wp-image-357" alt="Hummingbird_Excel2" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Excel2-840x209.jpg" width="840" height="209" />

&nbsp;

&nbsp;

Once the Excel document is saved, you then open up Whitefeet's Model Builder.

<img alt="Hummingbird_Model Builder" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Model-Builder.jpg" width="294" height="327" />

&nbsp;

&nbsp;

In the Model Builder window, you first select "Import Excel to Elements".

<img class="alignnone size-full wp-image-344" style="font-size: 13px;" alt="Hummingbird_Model Builder2" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Model-Builder2.jpg" width="818" height="352" />

&nbsp;

&nbsp;

Then navigate to the location of the Excel file. The Model Builder will quickly look at the Sheets available in the Excel document to allow you to choose which sheet you want to build. You then select which "Mode" to build in. From the three you can select from, it appears that none of them allow you to update an already placed element, but rather
<ol>
	<li><span style="font-size: 13px;">add all new leaving the already placed in the document to be manually deleted if </span>necessary</li>
	<li>leave existing elements that match and only add new elements</li>
	<li>or delete existing elements that match and make all new elements.</li>
</ol>
Next you need to select the Adaptive Component family you want to place. The one thing that is confusing here is that we have already defined the Adaptive Component name in the Grasshopper file and Excel file, but now we have an option to define it here? It turns out that since we defined the Adaptive Component in Grasshopper, it does not matter what we select here.

<img class="alignnone size-full wp-image-345" alt="Hummingbird_Model Builder3" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Model-Builder3.jpg" width="783" height="655" />

&nbsp;

&nbsp;

Once you click "Process," your computer fan will kick in and after a few seconds of nothing happening, a progress bar finally appears. This process takes a long time as it parses through each row of the excel file.

<img class="alignnone size-full wp-image-347" style="font-size: 13px;" alt="Hummingbird_Model Builder5" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Model-Builder5.jpg" width="791" height="55" />

&nbsp;

&nbsp;

When the Adaptive Components finish being instantiated, you will notice that the Undo stack is littered with each family placement. This could be problematic if you are placing 1000's of components and selecting them individually to delete them may be impossible.
<p style="text-align: center;"><img class=" wp-image-346 aligncenter" style="font-size: 13px;" alt="Hummingbird_Model Builder4" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Model-Builder4.jpg" width="138" height="455" /></p>
&nbsp;

&nbsp;

When using the same data set as the previous post, I ran into an issue with the Hummingbird/Whitefeet workflow. After talking with Tim and Mario, it was suggested that it may be an issue with the Model Builder where it has trouble sometimes making Extrusions in an Adaptive Component. This issue turned out to not be that issue, but one even simpler. In the previous data set I was sequencing the points a little weird in the first place, it just somehow worked with Chameleon. If you were to step around the surface, the adaptive points were sequenced as so, 1-2-4-3. With Hummingbird/Whitefeet I had to sequence it as so, 1-2-3-4. Though it makes sense, I would think that it should not matter what order you place the points of an Adaptive Component as long as it aligns with the shape grammer. I think this actually makes a good test case. Here is the revised [button link="http://collectivebim.com/wp-content/uploads/2013/04/4_Pt_Plane_02.rfa" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]Adaptive Component[/button].

&nbsp;

<img class="wp-image-351 alignleft" alt="Hummingbird_Revit_Adpt_Placed3" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Revit_Adpt_Placed3.jpg" width="355" height="222" /> <img class="wp-image-350 alignleft" alt="Hummingbird_Revit_Adpt_Placed2" src="http://collectivebim.com/wp-content/uploads/2013/04/Hummingbird_Revit_Adpt_Placed2.jpg" width="371" height="222" />

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

My comments for this workflow, for what it is worth, is that it is a robust way to automate the placement of Revit families from Grasshopper. There are components in this tool set that is not available in any of the other workflows available. The ones I am thinking of are the Lines, Rooms, Masses, &amp; Topos. In addition, once you get your feet wet with the Whitefeet tools, you will notice how much you can do with just those tools in Revit. On the Grasshopper side, you will find that most of the other components can be handled better through the Case tools or through Geometry Gym. It is also nice that it has an integration with other tools with the possibilities of others in the future.

This issues I have with the workflow primarily focuses around speed. With Excel being the intermediary platform, it takes an unnecessary amount of time to write the data to Excel just to turn around and take longer to process it. As you will notice, the more elements/rows you have in the excel document, the processing time grows enormously. Another issue I have with it just as with Chameleon, is that updating existing elements without deleting them and rebuilding is not possible.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2013-04-22 21:47:52</wp:post_date>
		<wp:post_date_gmt>2013-04-23 01:47:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grasshopper-revit-interoperability-hummingbird</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="grasshopper"><![CDATA[Grasshopper]]></category>
		<category domain="post_tag" nicename="hummingbird"><![CDATA[Hummingbird]]></category>
		<category domain="category" nicename="interoperability"><![CDATA[Interoperability]]></category>
		<category domain="post_tag" nicename="revit"><![CDATA[Revit]]></category>
		<category domain="post_tag" nicename="whitefeet"><![CDATA[Whitefeet]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Hummingbird]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Hummingbird is a set of components, a plugin, for Grasshopper created by Tim Meador. Create Levels & Grids, both loadable and system families, and lofting.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[A review of placing Adaptive Components in Revit via Hummingbird and Whitefeet.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[A review of placing Adaptive Components in Revit via Hummingbird and Whitefeet.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[382]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Solibri Model Checker v8.1 released</title>
		<link>http://collectivebim.com/solibri-model-checker-v8-1/</link>
		<pubDate>Tue, 23 Apr 2013 03:19:52 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

<em>From Solibri's Press Release:</em>

&nbsp;

<span style="font-size: 13px;">[quote style="1"]</span>Solibri Introduces Solibri Model Checker v8.1 improving user experience, information access and visualization, while implementing key R&amp;D requests from customers.

&nbsp;

This release emphasizes:
<ul>
	<li>usability and user experience</li>
	<li>availability and accessibility of BIM data and visual information</li>
	<li>strong customer focus</li>
</ul>
<div></div>
<div></div>
&nbsp;
<h2>Usability and User Experience</h2>
“SMC has always received praise for user friendliness. This has also been one of the key themes in all recent releases. For example, our previous version (SMC v8) included guided step-by-step instructions for carrying out even the most difficult BIM QA/QC tasks, enabling any user to realize the full business benefits from SMC” states Mr. Heikki Kulusjärvi, CEO of Solibri, Inc.

SMC v8.1 perfects many of the tasks from the end-user point of view. The overall user experience has improved significantly and visualization speed has increased dramatically, making QA/QC more efficient. BIM collaboration and communication, as well as mark-up functionality have been greatly improved: Also, the core of SMC, the automated rule-based model checking and related step-by-step task customization has new capabilities for ensuring better QA/QC results.

&nbsp;

&nbsp;
<h2>Strong Customer Focus</h2>
“Solibri Model Checker v8.1 also addresses development requests provided by our most advanced and BIM savvy customers. We greatly appreciate this input since it enables us to remain at the leading edge of BIM QA/QC. Close co-operation with the global user base enables us to serve the market while continuously improving our offering, and providing increased value to our customers“ Mr. Kulusjärvi continues.[/quote]

&nbsp;

[divider top="0"]

&nbsp;

Lets get down to the details about what has been updated! There has been a lot of changes and great improvements in this release and I look forward to sharing some of them in future posts.

&nbsp;

<em>Below is from Solibri's website.</em>

[quote style="1"]
<h2>Support for new Excel (.xlsx) format</h2>
<ul>
	<li>Data can now be imported from .xlsx files</li>
	<li>Reports can be done in the .xlsx format. Reports that use templates are in the new format when the template is also in the new format.</li>
</ul>
&nbsp;
<h2>3D</h2>
<ul>
	<li>Improved performance</li>
	<li>Ortho View added</li>
	<li>Area selection and hiding</li>
	<li>Selection from 3D modified so that it always clears the selection basket, unless Ctrl-button is pressed down</li>
	<li>Contents of the component quick info window are configurable</li>
	<li>Section planes with outlines</li>
	<li>Section plane can be selected as markup plane</li>
	<li>Hide tool can be used to remove markups and dimensions</li>
	<li>Navigation map shows the name of the current floor. You can switch to another floor by clicking the name and choosing the new floor from the list.</li>
	<li>Minimum and maximum sizes of dimensions and footprint space info text can be set</li>
	<li>Showing and zooming to global origin</li>
	<li>Smoother colors and shading</li>
</ul>
&nbsp;
<h2>Classification</h2>
<ul>
	<li>Default classification names and colors can be listed in a separate table that can also be read to/from Excel file.</li>
	<li>Classification logic can now use either “Best Match” or the new “First Match” method. The latter evaluated the classification rules from top to bottom and the first row that matches a component is selected as the classification name. The Best Match method evaluates all rows and finds the best matching one.</li>
	<li>The source of classification is shown in the classification settings dialog’s classified components tab</li>
</ul>
&nbsp;
<h2>Compartmentation</h2>
<ul>
	<li>Possibility to use classifications in compartmentation wizard</li>
</ul>
&nbsp;
<h2>Result Summary</h2>
<ul>
	<li>Possibility to visualize results summary in 3D by severity colors so that component’s color is more solid the more issues it has.</li>
</ul>
&nbsp;
<h2>Tasks</h2>
<ul>
	<li>Classification task is now configurable. You can specify whether all components should be classified, or whether the user should verify the classification even in the case when enough components have been classified.</li>
	<li>User defined tasks related to a Ruleset can refer to a rule to provide better targeting of the task.</li>
</ul>
&nbsp;
<h2>Communication</h2>
<ul>
	<li>Link back to checking results and the checked rule from the issue in presentation available from popup menu.</li>
	<li>A new toolbar below the 3D window for easy management of  coordination information.</li>
	<li>More intuitive way  to navigate between slides in issues.</li>
	<li>All slides in issues are now reported in PDF and RTF reports.</li>
	<li>Issue id added to the PDF and RTF reports.</li>
</ul>
&nbsp;
<h2>Model Tree</h2>
<ul>
	<li>Relocating of models simplified. If you want to move several models with the same translation, you only need to give the value once. Also the translation can easily be measured from the models.</li>
</ul>
&nbsp;
<h2>Information Takeoff</h2>
<ul>
	<li>Possibility to add version number of Solibri Model Checker in the Excel reports made with template.</li>
</ul>
&nbsp;
<h2>Rule Updates</h2>
<ul>
	<li>#222: Possibility to check vertical distance between components.</li>
	<li>#179: More parameters (required by some building codes) and better explanations of route lengths.</li>
	<li>#11: Possibility to require either components from all rows, or only from one.</li>
	<li>#231: Possibility to check windows/doors/openings located in the same wall.</li>
	<li>#9, #11, #176 added possibility to select several disciplines instead of only one.</li>
</ul>
&nbsp;
<h2>Possibility to customize ITOs and hyperlinks with scripts (currently available only for selected Partners and customers)</h2>
<ul>
	<li>ITO column can have a script that calculates its value based on other columns. For example, a mass column could calculate its value on volume column</li>
	<li>Hyperlink view has a possibility to open hyperlink templates that automatically create hyperlinks based on component property values.</li>
</ul>
&nbsp;
<h2>Updated Rulesets</h2>
<ul>
	<li>Coverings (insulation) in MEP intersections
<ul>
	<li>Intersections without insulation (small tolerances)</li>
	<li>Intersections between ’hard material’ and insulation (’medium’ tolerances)</li>
	<li>Intersections between insulations (larger tolerances)</li>
</ul>
</li>
</ul>
<ul>
	<li>BIM Validation – Architectural
<ul>
	<li>Rule to check free space above suspended ceilings</li>
</ul>
</li>
</ul>
&nbsp;
<h2>IFC import</h2>
<ul>
	<li>Added more coverage of information relevant for COBie</li>
	<li>Better support for covering (e.g. insulation around pipes). Intersection between coverings can now be checked separately, if they are modeled separately in the IFC file.[/quote]</li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[SMC v8.1 perfects many of the tasks from the end-user point of view. The overall user experience has improved significantly and visualization speed has increased dramatically, making QA/QC more efficient. BIM collaboration and communication, as well as mark-up functionality have been greatly improved: Also, the core of SMC, the automated rule-based model checking and related step-by-step task customization has new capabilities for ensuring better QA/QC results.]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2013-04-22 23:19:52</wp:post_date>
		<wp:post_date_gmt>2013-04-23 03:19:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>solibri-model-checker-v8-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[Analysis]]></category>
		<category domain="category" nicename="bim"><![CDATA[BIM]]></category>
		<category domain="category" nicename="coordination"><![CDATA[Coordination]]></category>
		<category domain="post_tag" nicename="ifc"><![CDATA[IFC]]></category>
		<category domain="post_tag" nicename="smc"><![CDATA[SMC]]></category>
		<category domain="post_tag" nicename="solibri"><![CDATA[Solibri]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[74]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Solibri]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Solibri Introduces Solibri Model Checker v8.1 improving user experience, information access and visualization, while implementing key R&D requests.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[Solibri Model Checker v8.1 released! Release details at http://wp.me/p2ZTR1-6j #ifc #openbim]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3418937</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3103341</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Grasshopper &amp; Revit Interoperability: Adaptive Components via Geometry Gym</title>
		<link>http://collectivebim.com/grasshopper-revit-interoperability-adaptive-components-geometry-gym/</link>
		<pubDate>Sun, 28 Apr 2013 13:15:18 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="size-full wp-image-423 aligncenter" alt="GeometryGym" src="http://collectivebim.com/wp-content/uploads/2013/04/GeometryGym.jpg" width="125" height="125" />
<h3>About Geometry Gym:</h3>
The next plugin in the list of interop tools for Revit is one created by Geometry Gym. Geometry Gym is usually referred to as the plugin name, but it is technically a company created by the developer <a href="http://au.linkedin.com/pub/jon-mirtschin/8/4b5/a51">Jon Mirtschin</a>. The plugins that Jon has been developing has recently been gaining names, in particular is the powerhouse geometry tool set which is now called BullAnt. Formally called StructDrawRhino, BullAnt has a lot of useful tools that are not available anywhere else. Some great examples of what you can generate with this base tool set can be seen <a href="http://geometrygym.wikidot.com/summary">here</a>.
<p style="text-align: center;"><img class=" wp-image-424 aligncenter" alt="Geometry Gym - Grasshopper Panel" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Grasshopper-Panel.jpg" width="628" height="759" /></p>
&nbsp;
<h3>[divider top="1"]</h3>
<h3>Geometry Gym: BIM Tools</h3>
In addition to the BullAnt plugin, Jon has been actively developing a set of very powerful interop tools from Rhino/Grasshopper to Revit, Vasari, Tekla, SDNF, Oasys GSA, Robot, SAP 2000, SOFiSTiK, SPACEGASS, STRAND7. I recognize only a few of those! So obviously we are only going to talk about the Grasshopper to Revit tools for this post. You can download all of the interop tools on his blog <a href="http://geometrygym.wikidot.com/downloads">here</a>.

&nbsp;

Geometry Gym uses IFC, Industry Foundation Class, as the exchange format between Grasshopper and Revit. Because of this, the plugin comes packed with components for creating a proper IFC file with the proper relationships of IFC elements. Don't let the sheer number of components overwhelm you. Prepare yourself when you expand a tab and realize their are dozens of components that are hidden from the panel window! Jon realizes the intimidation this causes, but I promise that once you start to understand the structure of IFC, and more importantly how Jon has organized the panels, they become a lot more friendly.

<img class="alignnone size-large wp-image-450" alt="Geometry Gym - Grasshopper Home Panel" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Grasshopper-Home-Panel-840x39.jpg" width="840" height="39" />

&nbsp;

As with the other GH to RVT interop tools, I am going to briefly cover the available tabs of components that come with the plugin, but I will keep it brief for the purpose of keeping your attention. Another post on the Geometry Tools is way overdue.  From left to right on the GeoGym BIM tab.

&nbsp;

<strong>ggIFC Tab</strong>

The ggIFC components tab is where the basic IFC components live. Creating the entry points for the IFC file using the Building, Project, and Site components as well as defining Building Stories (Levels), Spaces, Materials, and Profiles are all often used components when building the IFC file.

<img class="alignnone size-full wp-image-445" alt="Geometry Gym - ggIFC_" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC_.jpg" width="168" height="72" />

<img class="alignnone size-full wp-image-444" alt="Geometry Gym - ggIFC" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC.jpg" width="600" height="483" />

&nbsp;

<strong>ggIFC Attributes Tab</strong>

The ggIFC Attributes components tab include components for creating Property Sets and values of specific types. These ultimately are streamed into element type components.

<img class="alignnone size-full wp-image-431" alt="Geometry Gym - ggIFC Attributes_" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Attributes_.jpg" width="139" height="74" />

<img class="alignnone size-full wp-image-430" alt="Geometry Gym - ggIFC Attributes" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Attributes.jpg" width="212" height="441" />

&nbsp;

<strong>ggIFC Elements Tab</strong>

The ggIFC Elements components tab, I think, is a tab full of misfit components. Jon may have to weigh in on the use of this tab. My version of Geometry Gym is also an unofficial release, so the tab layout may be in limbo.

<img class="alignnone size-full wp-image-437" alt="Geometry Gym - ggIFC Elements_" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Elements_.jpg" width="138" height="74" />

<img class="alignnone size-full wp-image-436" alt="Geometry Gym - ggIFC Elements" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Elements.jpg" width="189" height="195" />

&nbsp;

<strong>ggIFC Elements Building Tab</strong>

The ggIFC Elements Building components tab is where most of the magic happens. This is where you can create various Architectural IFC elements. You will notice that there are some duplicate components, but these are actually special case components. The components that end with "Standard Case" are used for creating Revit specific elements. This allows Jon to recreate native Revit elements even down to creating the Wall and Floor structural and material layers. The components that end in "Type" are for defining what type of element, and then the "Common Properties" components are for defining the properties most commonly associated with that element. So the sequence of the components generally go from "Common Properties" to "Type" to "IFC Element".

<img class="alignnone size-full wp-image-433" alt="Geometry Gym - ggIFC Elements Building_" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Elements-Building_.jpg" width="184" height="76" />

<img class="alignnone size-full wp-image-432" alt="Geometry Gym - ggIFC Elements Building" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Elements-Building.jpg" width="669" height="759" />

&nbsp;

<strong>ggIFC Element Services Tab</strong>

The ggIFC Element Services components tab is just like its Architectural counterpart, but Services related. There is no need to reiterate its usage.

<img class="alignnone size-full wp-image-435" alt="Geometry Gym - ggIFC Elements Services_" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Elements-Services_.jpg" width="194" height="74" />

<img class="alignnone size-full wp-image-434" alt="Geometry Gym - ggIFC Elements Services" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Elements-Services.jpg" width="517" height="411" />

&nbsp;

<strong>ggIFC Entity Tab</strong>

The ggIFC Entity components tab include components for bringing an IFC file into Grasshopper and decomposing it to gain access to the elements inside it. The Beam, Column, and Slab components are basically filter components that allow you to stream the product or representation through it and only return a Column.

<img class="alignnone size-full wp-image-439" alt="Geometry Gym - ggIFC Entity_" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Entity_.jpg" width="184" height="74" />

<img class="alignnone size-full wp-image-438" alt="Geometry Gym - ggIFC Entity" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Entity.jpg" width="270" height="405" />

&nbsp;

<strong>ggIFC Representations Tab</strong>

The ggIFC Representations components tab includes components for creating Line Styles, generic IFC geometry types like Curves, Verticies, Surfaces, and Solids. For efficiency, it is better to use the geometry type that best represents your representation. You may also notice some very interesting components like PointOnCurve.

<img class="alignnone size-full wp-image-441" alt="Geometry Gym - ggIFC Representations_" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Representations_.jpg" width="166" height="76" />

<img class="alignnone size-full wp-image-440" alt="Geometry Gym - ggIFC Representations" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-ggIFC-Representations.jpg" width="487" height="504" />

&nbsp;

&nbsp;
<h3>[divider top="1"]</h3>
<h3>Grasshopper to Revit Workflow: Placing Adaptive Components</h3>
<strong>IFC Entry Points</strong>

Using the same base [button link="http://collectivebim.com/wp-content/uploads/2013/04/Geometry%20Gym.gh" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]Grasshopper Definition[/button] again, we will use only the components necessary for getting the Adaptive Component into Revit. This means that we need to build a very basic IFC file. To do that, we need to create the entry point by placing two components, IFC Building and IFC Project. These components come loaded with default values to streamline the process, so be sure to change them to make sense for your project. Every IFC file you build with Geometry Gym will need these two components.

<img class="size-full wp-image-461 aligncenter" alt="Geometry Gym - Project and Building" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Project-and-Building.jpg" width="305" height="256" />

&nbsp;

<strong>IFC Adaptive Component</strong>

Next we need to build up the IFC Element of an Adaptive Component. The Adaptive Component component for Geometry Gym is labeled "ggIFC Curtain Wall Standard Case Adaptive Component". I am not sure why it is that long, but it may have to do with helping you know which component to use to define its Type.  The three required inputs that are required is the Container (IFC Building), the Curtain Wall Type, and the Points for the Adaptive Points. We have two of those, so now we just need to define the Curtain Wall Type.

&nbsp;

One of the biggest advantages to using Geometry Gym to place Adaptive Components is that Geometry Gym can create the Adaptive Component for you! Though you do not have all the functionality as you do in Revit's Conceptual Modeling Environment, you can create some parametric relationships that are available in the IFC definitions. One of those relationships that has been implemented is the PointOnCurve component. After talking with Jon, defining a PointOnSurface is also available but not implemented yet. I think that would be a great addition.

&nbsp;

<strong>IFC Curtain Wall Type</strong>

Anyways, in the current release of Geometry Gym, we need to define "something" for the adaptive component whether it is in the Revit project already or not. This leads us to the required inputs of the Curtain Wall Type component. The only required input is the Representation input, though we really want to define a name as well. If the Name matches the name of an adaptive component in Revit, it will use that famiy. If the name does not exist, it will create what ever you have defined as the Representation as an adaptive component.

<img class="size-full wp-image-462 aligncenter" alt="Geometry Gym - Curtain Wall Type" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Curtain-Wall-Type.jpg" width="526" height="223" />

&nbsp;

<strong>IFC Representation</strong>

To create a representation for the adaptive component, we need to build up the component using IFC geometry types. The adaptive component that we have been using with the previous plugins is extremely straightforward to create in Geometry Gym. Starting with 4 points, we need to convert those into IFC Vertex Points. The order that we stream them together will define the placement order in Revit. The IFC Vertex Points are then used to create an IFC Face. The IFC Face is then streamed into a IFC Face Set component. In order to input into the Curtain Wall Type component we need to have a Representation Map, so we can just stream the Face or Face Set into the IFC Representation Map. The Representation Map component basically acts as a "block" that contains all kinds of geometry for IFC.

<img class="size-full wp-image-464 aligncenter" alt="Geometry Gym - Representation" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Representation.jpg" width="534" height="467" />

&nbsp;

&nbsp;

<strong>Final Defintion</strong>

The final definition ends up being a total of 15 components to create the Adaptive Component. Three of them though are standard and are used every time whether you are creating an entire building or just adaptive components. You will notice that the output of the Geometry Gym components is the IFC data itself. When you add or delete elements/component from the definition, the IFC data is recomputed and compressed. Even the numbers that are associating the elements and attributes are recomputed to make sure that there are no unused numbers.

<img class="alignnone size-large wp-image-429" alt="Geometry Gym - Create Adaptive Component" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Create-Adaptive-Component-840x405.jpg" width="840" height="405" />

&nbsp;

<strong>Bake IFC</strong>

When you are ready to save the [button link="http://collectivebim.com/wp-content/uploads/2013/04/GeometryGym.ifc" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]IFC File[/button], you can use the ggIFC BakeToFile component. This basically gathers all the IFC outputs of the Geometry Gym components and saves it to a folder location. The BakeToFile component also comes with some options that you should be aware of like the (IFC4 checkbox.

<img class="wp-image-467 aligncenter" alt="Geometry Gym - IFC Bake" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-IFC-Bake.jpg" width="281" height="461" />

&nbsp;

<strong>Geometry Gym Revit Addin</strong>

To bring in an IFC into Revit, you need to use the addin developed by Geometry Gym. Revit can import in an IFC file, but it will not create native Revit elements. Even if you export an IFC from Revit and bring it back in it does not retain its intelligence. Jon is also using a few "tags" in the IFC that allow him to do cool stuff like create Materials, Layers, and Adaptive Components. When start the addin, a window will appear giving you some options. None of these apply to our example.

<img class="size-large wp-image-471 aligncenter" alt="Geometry Gym - Revit" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Revit.jpg" width="121" height="102" />

<img class="size-full wp-image-470 aligncenter" style="font-size: 13px;" alt="Geometry Gym - Revit 2" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Revit-2.jpg" width="670" height="373" />

&nbsp;

A few issues you may or may not run into during this process are the unit conversion and the compiling of the IFC in Grasshopper. The units need to make sense especially when using the Adaptive Component. In this example, I had to change the units in Rhino from Millimeters to Centermeters or larger. It would throw an error in Revit otherwise. The other issue pointed out by Jon is only temporary and will be fixed when the new Grasshopper version is released soon. I don't quite understand the problem, so I am not going to try to pretend that I do, but if you run into an issue with Revit throwing an error and you know it is not your units, try saving your Grasshopper definition, closing the definition (not GH), then reopening it. :)

&nbsp;
<h3>[divider top="1"]</h3>
&nbsp;

<strong>Comments</strong>

My comments for this workflow and plugin in general are mixed. Jon has put in an extreme amount of effort creating this plugin and actually developing a viable IFC importer and exporter for both Rhino and Revit (among other applications). If you have not dealt with him, you will be pleasantly impressed with his responsiveness and eagerness to help in any way. If you need a feature, he will add it in a heart beat. You can tell that he is passionate about it and that he is not trying to sell his services or product to you, but truly cares about your project. Unlike most of the GH tools, Jon actually provides support and training for his tools.

&nbsp;

Enough about the developer for now. As you will see, the tools and available properties that you can add to elements is mind boggling. There are some really interesting workflows and opportunities for non-Revit users that can come out of these tools. Learning the tools though is a pretty steep endeavor. The toughest part is learning how an IFC is constructed, but I actually think that using Geometry Gym is a really great way to get into IFC. It makes you understand the format at a fundamental level, much like Grasshopper makes you understand geometry at a fundamental level.

&nbsp;

In saying that, it takes an insane amount of components to create the simplest things because you have to build up everything that defines an element. There also seems to be some inflexibility with creating multiple IFC files in one definition. Currently all components are compiled into a single IFC file. It could be useful to separate the IFC Walls, IFC Slabs, and other elements from each other without having to disable the components. That way, if the Floors were updated but the Walls or Stairs were not, the team does not have to disable anything or import elements that did not change.

&nbsp;

I also think that through some creative customization of the GH component kernel, the amount of components could be reduced significantly.

&nbsp;

<strong>Other blog posts on Geometry Gym</strong>

For additional information, check out the <a href="http://bim42.com/tag/geometry-gym/">BIM 42 blog</a> and its Geometry Gym posts.

<img class="size-full wp-image-468 aligncenter" alt="Geometry Gym - Placed 1" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Placed-1.jpg" width="698" height="607" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2013-04-28 09:15:18</wp:post_date>
		<wp:post_date_gmt>2013-04-28 13:15:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grasshopper-revit-interoperability-adaptive-components-geometry-gym</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="geometry-gym"><![CDATA[Geometry Gym]]></category>
		<category domain="post_tag" nicename="grasshopper"><![CDATA[Grasshopper]]></category>
		<category domain="post_tag" nicename="ifc"><![CDATA[IFC]]></category>
		<category domain="category" nicename="interoperability"><![CDATA[Interoperability]]></category>
		<category domain="post_tag" nicename="revit"><![CDATA[Revit]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[423]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Geometry Gym]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Geometry Gym uses IFC, Industry Foundation Class, as the exchange format between Grasshopper and Revit. Create proper IFC files & relationships.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[Grasshopper & Revit Interoperability: Adaptive Components via Geometry Gym http://wp.me/p2ZTR1-6O @geometrygym #IFC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3103341</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3418937</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Grasshopper &amp; Revit Interoperability: CASE workflow tools</title>
		<link>http://collectivebim.com/grasshopper-revit-interoperability-case-workflow-tools/</link>
		<pubDate>Thu, 02 May 2013 21:49:18 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=808</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="size-full wp-image-810 aligncenter" alt="CASE LOGOS" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE-LOGO.jpg" width="500" height="168" />
<h2>About the CASE workflow tools:</h2>
The last of these interopability tools that I will cover will be one of our own.  All of the tools previously mentioned are great and currently serve a real need in the industry<em> (post to follow comparing them all side by side)</em>. We actually have used or currently use most of them in our everyday operations; however, being that we are capable of building our own tools we found the need to build scalable and extendable solutions for our clients. We are extremely excited about the development of these new tools and in fact, they are so new that a name for them has not been decided upon yet. For now, I will refer to them as the CASE workflow tools. You may have even seen some teaser images or videos done on the amazing <strong><a href="http://www.case-inc.com/users/nmiller">Nate Miller</a></strong>'s <strong><a href="http://www.theprovingground.org/">blog</a></strong>, who is the lead developer of these tools.  How are these tools any different you say?

&nbsp;

<strong>Coordinated information across a team:</strong>

The CASE workflow tools tackle the issue of managing geometry changes across different platforms across different teams. It is common that the team building a definition in Grasshopper is not always the same team managing the Revit model. Through a web service, the CASE workflow tools compensate for this project structure by allowing the information to be accessible to a team and not just to one person. No more boring files to search through to find the correct one! Updating models become managed, controlled, fast, and easy as pie.

&nbsp;

<strong>Learning Curve:</strong>

The is no learning curve for these tools,<em> if you know Grasshopper already :)</em>. The User Interface has been designed to eliminate as many useless inputs and user errors as possible and it will continue to improve. The conversion of units is handled for you, allowing you to work "unitless" in Rhino and define your units for exporting to Revit.

&nbsp;

<strong>Streamlined Model Updates:</strong>

We know that deleting all or selectively deleting can be a pain. So we reduced and, when possible, eliminated the need for manual deleting prior to updating. This also allows for selective parameter changes of elements without the need to run the entire batch.

&nbsp;

<strong>Professional Development, Implementation, and Support:</strong>

The one thing you may have guessed is that these tools are not free. This is actually a really good thing as it means we are actively developing it. We also understand that these types of workflows vary across the board and can require some expertise to design the workflow. So in addition to actively developing it alongside you, we also implement it into the project, train the team, and support the progress. We are actively working with with firms to consult on projects and deploy these tools.  Feel free to contact us if you are interested in collaborating!  <a href="http://www.case-inc.com/contact" target="_blank"><b>http://www.case-inc.com/contact</b></a>

&nbsp;

[divider top="1"]
<h3></h3>
<h3>CASE Tools: Grasshopper and Revit</h3>
The CASE tools currently consist of a series of Grasshopper Components and a Revit Add-in.

&nbsp;

<strong>GH - Interop tab:</strong>

The Interop tab contains workflow components for creating Revit specific elements.

<img class="size-full wp-image-824 aligncenter" alt="CASE_Grasshopper Tools 012" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-012.jpg" width="143" height="296" />

<strong>Revit - CASE Design, Inc. tab</strong>

On the Revit side of things, there  is only one component that does all the magic, the "CASE Exchange."

<img class="size-full wp-image-819 aligncenter" alt="CASE_Grasshopper Tools 07" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-07.jpg" width="431" height="120" />

&nbsp;

&nbsp;

[divider top="1"]
<h3></h3>
<h3>Grasshopper to Revit Workflow: Placing Adaptive Components</h3>
Using the same Grasshopper Definition and [button link="http://collectivebim.com/wp-content/uploads/2013/04/4_Pt_Plane_02.rfa" color="#AAAAAA" size="1" style="1" dark="0" radius="auto" target="self"]Adaptive Component[/button], I will walk through the steps using the CASE workflow tools.

&nbsp;

The Adaptive Component component in Grasshopper has only two inputs, a Boolean toggle to execute the export and the points for the Adaptive Component's adaptive points.

<img class="size-full wp-image-813 aligncenter" alt="CASE_Grasshopper Tools 01" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-01.jpg" width="553" height="307" />

&nbsp;

Before you set the toggle to TRUE, you first have to define some settings by right-clicking on the component.

<img class="size-full wp-image-814 aligncenter" alt="CASE_Grasshopper Tools 02" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-02.jpg" width="333" height="199" />

&nbsp;

The Login Settings will bring up a window to define the credentials for the web service.

<img class="size-full wp-image-815 aligncenter" alt="CASE_Grasshopper Tools 03" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-03.jpg" width="370" height="304" />

&nbsp;

The Data Settings will bring up a window to define a Data ID <em>(file name)</em>, the Units to export as, the Category of the Adaptive Component family, and the Adaptive Component's Family and Type name.

<img class="size-full wp-image-816 aligncenter" alt="CASE_Grasshopper Tools 04" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-04.jpg" width="454" height="320" /><img class="size-full wp-image-817 aligncenter" alt="CASE_Grasshopper Tools 05" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-05.jpg" width="454" height="320" />

&nbsp;

Once you save all the settings and set the toggle to TRUE, the component will sync your data to the web.

<img class="size-full wp-image-818 aligncenter" alt="CASE_Grasshopper Tools 06" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-06.jpg" width="454" height="100" />

&nbsp;

Then once you click the Addin in Revit, the same window pops up to enter your credentials. This could be a different person on the team, but for now it is just me again. You also only have to enter your credentials the first time and check "Remember Me."

<img class="size-full wp-image-820 aligncenter" alt="CASE_Grasshopper Tools 08" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-08.jpg" width="370" height="338" />

&nbsp;

When you Login it will access the web service and allow you to choose which file you would like to sync.

<img class="size-full wp-image-821 aligncenter" alt="CASE_Grasshopper Tools 09" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-09.jpg" width="370" height="338" />

&nbsp;

Select which file you want to sync and then decide if you want to "Update" previously placed elements or "Replace" to create entirely new ones!

<img class="size-full wp-image-831 aligncenter" alt="CASE_Grasshopper Tools 010" src="http://collectivebim.com/wp-content/uploads/2013/05/CASE_Grasshopper-Tools-0101.jpg" width="370" height="440" />

&nbsp;
<p style="text-align: center;"><img class=" wp-image-468 aligncenter" alt="" src="http://collectivebim.com/wp-content/uploads/2013/04/Geometry-Gym-Placed-1.jpg" width="698" height="607" /></p>
[divider top="1"]
<h3>Workshops around these tools:</h3>
For an additional write up about these tools and their recent deployments at a few workshops, check out <a href="http://www.theprovingground.org/2013/05/spring-workshop-recap-parametric.html" target="_blank">Nate's blog post</a>.

[divider top="1"]
<h3>Some videos previewing the tools:</h3>
&nbsp;

[responsive_youtube XP-oDq1NNMg]

&nbsp;

[responsive_youtube yKcpQGVGn3I]

&nbsp;

[responsive_youtube FvY5r_sA1KI]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>808</wp:post_id>
		<wp:post_date>2013-05-02 17:49:18</wp:post_date>
		<wp:post_date_gmt>2013-05-02 21:49:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grasshopper-revit-interoperability-case-workflow-tools</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="case"><![CDATA[CASE]]></category>
		<category domain="post_tag" nicename="grasshopper"><![CDATA[Grasshopper]]></category>
		<category domain="category" nicename="interoperability"><![CDATA[Interoperability]]></category>
		<category domain="post_tag" nicename="revit"><![CDATA[Revit]]></category>
		<category domain="post_tag" nicename="rhino"><![CDATA[Rhino]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[90]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[CASE]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[The CASE grasshopper workflow tools tackle the issue of managing geometry changes across different platforms across different teams via a web service.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[810]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[Grasshopper & Revit Interoperability: CASE workflow tools #gh3d #revit @case_inc @archinate http://wp.me/p2ZTR1-d2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3418937</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3103341</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>So Which GH To Revit Plugin Should I Use?</title>
		<link>http://collectivebim.com/gh-to-revit-plugin/</link>
		<pubDate>Mon, 06 May 2013 03:19:25 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=872</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;

The short answer is all of them! Each of the GH to Revit plugins I briefly covered for Adaptive Components can fill a need depending on what you are trying to achieve, how often you will be updating, how big the project is, and among other things. Without being biased, below are a few suggestions on which one to use in certain scenarios taking into consideration the current development state of each plugin. With the update frequency of a few of these plugins, these suggestions may change drastically.

&nbsp;

&nbsp;
<h3>Chameleon</h3>
<ul>
	<li>If you want a simple to use plugin.</li>
	<li><span style="line-height: 13px;">If you are working on one machine and will only be transferring Adaptive Components.</span></li>
	<li>If you want to create custom Curtain Wall Grid patterns in Revit.</li>
	<li>If you need to bring geometry from Revit to Grasshopper as a Mesh, Surfaces, Curves, etc.</li>
</ul>
<em><a title="Grasshopper &amp; Revit Interoperability: Adaptive Components via Chameleon" href="http://collectivebim.com/grasshopper-revit-interoperability-chameleon/">link to Chameleon post</a></em>

[divider top="0"]

&nbsp;
<h3>Hummingbird</h3>
<ul>
	<li>If you need to place Revit specific elements that are not available in other plugins at the moment like:
<ul>
	<li>Lines</li>
	<li>Loft Forms</li>
	<li>Masses</li>
	<li>Rooms</li>
	<li>Topography</li>
</ul>
</li>
	<li>If you want a fairly simple to use plugin.</li>
	<li>If you also need to connect the data to Processing or Cinema 4d.</li>
</ul>
<a title="Grasshopper &amp; Revit Interoperability: Adaptive Components via Hummingbird / Whitefeet" href="http://collectivebim.com/grasshopper-revit-interoperability-hummingbird/"><em>link to Hummingbird post</em></a>

[divider top="0"]

&nbsp;
<h3>Geometry Gym</h3>
<ul>
	<li>If you need to bring over geometry that does not necessarily have to be native Revit elements, but recognized as a specific element type like:
<ul>
	<li>Stair</li>
	<li>Railings</li>
	<li>Coverings</li>
	<li>Roofs</li>
	<li>etc</li>
</ul>
</li>
	<li>If you need to make more than just Architectural elements like:
<ul>
	<li>Structural
<ul>
	<li>Beams</li>
	<li>Columns</li>
	<li>Trusses</li>
	<li>Plates</li>
	<li>Bolts</li>
</ul>
</li>
	<li>Mechanical, Electrical, Plumbing, Fire Protection
<ul>
	<li>Ducts</li>
	<li>Lighting Fixtures</li>
	<li>Pipes</li>
</ul>
</li>
</ul>
</li>
	<li>If you need to connect to additional platforms other than Revit through IFC like:
<ul>
	<li>Tekla &amp; Tekla BIMsight</li>
	<li>SDNF</li>
	<li>AutoCAD Architecture &amp; AutoCAD MEP</li>
	<li>ArchiCAD</li>
	<li>Solibri</li>
</ul>
</li>
	<li>If you want to learn IFC in the process as a bonus!</li>
	<li>If you want development and support with the tools.</li>
</ul>
<em><a title="Grasshopper &amp; Revit Interoperability: Adaptive Components via Geometry Gym" href="http://collectivebim.com/grasshopper-revit-interoperability-adaptive-components-geometry-gym/">link to Geometry Gym post</a></em>

[divider top="0"]

&nbsp;
<h3>CASE workflow tools</h3>
<ul>
	<li>If you don't want to delete your geometry every time you update your Grasshopper definition.</li>
	<li>If you want a simple to use plugin.</li>
	<li>If you are working on multiple machines.</li>
	<li>If you need to share your data securely and efficiently with teams in far far away places.</li>
	<li>If you need to place native Revit "Hosted" elements like:
<ul>
	<li>Doors</li>
	<li>Windows</li>
	<li>Wall Hosted</li>
	<li>Floor Hosted</li>
	<li>Ceiling Hosted</li>
</ul>
</li>
	<li>If you want development and support with the tools and process.</li>
</ul>
<em><a title="Grasshopper &amp; Revit Interoperability: CASE workflow tools" href="http://collectivebim.com/grasshopper-revit-interoperability-case-workflow-tools/">link to CASE post</a></em>

<a href="http://www.theprovingground.org/2013/05/spring-workshop-recap-parametric.html" target="_blank"><em>link to Nate's post on the tools and their implementation at recent workshops</em></a>

[divider top="1"]

&nbsp;

With most of the use cases out on the table, let's take a look at their performance in a side-by-side comparison.

&nbsp;
<h3>Speed</h3>
One of the biggest and most apparent difference between them all are the speeds that they transfer the geometry over from Grasshopper to Revit. Using the same data set as in the previous posts, I unofficially timed each plugin through a series of steps. First, I recomputed the Grasshopper definition. Second, I exported the file from Grasshopper. Third, I imported the file into Revit. Fourth, I updated a parameter and re-exported the file from Grasshopper. Finally, I re-imported the file into Revit to change that parameter value.
<p style="text-align: center;"> <img class=" wp-image-889 aligncenter" alt="GH to Revit_Transfer Speed" src="http://collectivebim.com/wp-content/uploads/2013/05/GH-to-Revit_Transfer-Speed.jpg" width="626" height="566" /></p>

<h3 style="text-align: left;">Speed Chart Summary:</h3>
<ul>
	<li><span style="line-height: 12.997159004211426px;"><strong>Chameleon</strong> came in first in the speed test. If you are using Adaptive Components, Chameleon would be the way to go. If you need other geometry types, you will have to use another plugin.</span></li>
	<li><strong>Hummingbird</strong> came in last. With other geometry types that involve sketching lines, which involve point definitions, the time is increased dramatically as it is additional lines to parse though line by line.</li>
	<li><strong>Geometry Gym</strong> came in third. The speed with this plugin also greatly depends on what elements you are placing as it may require a bunch of IFC definitions to describe a geometry type. There really is no update parameter workflow with Geometry Gym, so instead you have to re-import the IFC.</li>
	<li><strong>CASE</strong> workflow tools came in second squeezing just in front of Geometry Gym mainly due to the update parameter tool that allows the CASE workflow tools to just change that value without recreating the geometry.</li>
</ul>
<p style="text-align: left;">[divider top="1"]</p>

<h3>File Size</h3>
<p style="text-align: left;">Though File size does not seem to have a significant impact in the workflow speed, it does add an additional layer of management to the process.</p>
<p style="text-align: left;"><img class=" wp-image-890 aligncenter" alt="GH to Revit_File Size" src="http://collectivebim.com/wp-content/uploads/2013/05/GH-to-Revit_File-Size.jpg" width="572" height="370" /></p>

<h3>File Size Chart Summary:</h3>
<ul>
	<li><strong>Chameleon</strong> tied for first with the CASE workflow tools as it does not actually require a file to transfer the data. It establishes a live link instead.</li>
	<li><strong>Hummingbird</strong> came in third.</li>
	<li><strong>Geometry Gym</strong> came in last, which is not really a surprise as IFC can get bulky.</li>
	<li><strong>CASE</strong> workflow tools tied with Chameleon for first. Though the CASE workflow tools transfers a file, it does it though a web management service that makes it hands-free and file-free.</li>
</ul>
[divider top="1"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>872</wp:post_id>
		<wp:post_date>2013-05-05 23:19:25</wp:post_date>
		<wp:post_date_gmt>2013-05-06 03:19:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gh-to-revit-plugin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="case"><![CDATA[CASE]]></category>
		<category domain="post_tag" nicename="chameleon"><![CDATA[Chameleon]]></category>
		<category domain="post_tag" nicename="geometry-gym"><![CDATA[Geometry Gym]]></category>
		<category domain="post_tag" nicename="grasshopper"><![CDATA[Grasshopper]]></category>
		<category domain="post_tag" nicename="hummingbird"><![CDATA[Hummingbird]]></category>
		<category domain="category" nicename="interoperability"><![CDATA[Interoperability]]></category>
		<category domain="post_tag" nicename="revit"><![CDATA[Revit]]></category>
		<category domain="post_tag" nicename="rhino"><![CDATA[Rhino]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_revision-control</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:8:"defaults";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[GH to Revit]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A summary and side-by-side comparison of each GH to Revit plugin. Suggestions on which one to use in certain scenarios. Includes Grasshopper and Revit...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[So Which GH To Revit Plugin Should I Use? http://wp.me/p2ZTR1-e4 #gh3d #revit #thunderdome]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3418937</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_3103341</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1162]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[So Which GH To Revit Plugin Should I Use? &#8211; collective BIM | mindflock]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://mindflock.wordpress.com/2013/05/06/so-which-gh-to-revit-plugin-should-i-use-collective-bim/</wp:comment_author_url>
			<wp:comment_author_IP>76.74.248.194</wp:comment_author_IP>
			<wp:comment_date>2013-05-06 05:22:46</wp:comment_date>
			<wp:comment_date_gmt>2013-05-06 09:22:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://collectivebim.com/gh-to-revit-plugin/?fb_source=pubv1 [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1367832166.4417889118194580078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
				<title>collectiveBIM is back after being hacked!</title>
		<link>http://collectivebim.com/collectivebim-is-back-after-being-hacked/</link>
		<pubDate>Sun, 01 Dec 2013 19:38:25 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1152</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignnone size-large wp-image-1156" alt="hacked" src="http://collectivebim.com/wp-content/uploads/2013/12/hacked-840x472.jpg" width="840" height="472" />

&nbsp;

Ever since July of this year, I have battling a relentless bot that attacked my php files for this blog and all my other sites on the same server. After months of narrowing down the problems and fixing the vulnerabilities, I am now confident to continue contributing to this blog. Apologies if I kept you up late at night hitting refresh until I posted something new. I know this is Oscar winning content, but my much more exciting day job has been getting most of my attention.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1152</wp:post_id>
		<wp:post_date>2013-12-01 14:38:25</wp:post_date>
		<wp:post_date_gmt>2013-12-01 19:38:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>collectivebim-is-back-after-being-hacked</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="none"><![CDATA[none]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1156]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Solibri Magazine 2013 features CASE</title>
		<link>http://collectivebim.com/solibri-magazine-2013-features-case/</link>
		<pubDate>Mon, 23 Dec 2013 20:35:43 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1164</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignnone size-large wp-image-1167" alt="9-10-2013 2-26-13 PM" src="http://collectivebim.com/wp-content/uploads/2013/12/9-10-2013-2-26-13-PM-840x449.jpg" width="840" height="449" />

CASE was graciously invited to present the work we have been doing that involved the use of Solibri Model Checker in this year's <a href="http://www.solibri.com/magazine/solibri-magazine-2013.html">Solibri Magazine</a>.  The magazine is published on a yearly cycle and it usually sweetens the pot just before the next version of Solibri Model Checker is released into the wild.

&nbsp;

The CASE article highlights two examples of how we deploy Solibri Model Checker for our clients and how we leverage it internally at CASE.  The value of using Solibri Model Checker during design has heightened tremendously this year.  As such, we have been developing standards and workflows around Solibri Model Checker for clients that have an interest in using it to deliver higher quality models and for streamlining their review process.  The first example mentioned in the article highlights a client's use of Solibri Model Checker and how it has directly led to an increase in model confidence.

<img class="alignnone size-large wp-image-1166" style="line-height: 1.5em;" alt="9-10-2013 2-24-18 PM" src="http://collectivebim.com/wp-content/uploads/2013/12/9-10-2013-2-24-18-PM-840x449.jpg" width="840" height="449" />

&nbsp;

The second example in the article discusses how we are using the BIM Collaboration Format (BCF), a reporting format of Solibri Model Checker, internally to distribute and track building related issues that surface during design and construction.  We have been developing direct line of communication between multiple design software platforms and a popular bug tracking software, <a href="https://www.atlassian.com/software/jira">Atlassian Jira</a>.

<img class="alignnone size-full wp-image-1175" style="line-height: 1.5em;" alt="Jira_BCF" src="http://collectivebim.com/wp-content/uploads/2013/12/Jira_BCF.jpg" width="819" height="420" />

&nbsp;

<span style="line-height: 1.5em;">This new workflow allows us to maintain communication without dependency on specific software, disconnect an issue status from its dependency on geometry, and manage its life cycle over the course of a project.  Being that Jira is developed for software development projects, Agile methods like Scrum and Kanban are built in!  We are really excited about this area and can not wait to reveal what else we have developed on this front.</span>

<img class="alignnone size-large wp-image-1176" alt="Jira" src="http://collectivebim.com/wp-content/uploads/2013/12/Jira-840x469.jpg" width="840" height="469" />

<img class="alignnone size-large wp-image-1177" alt="Jira2" src="http://collectivebim.com/wp-content/uploads/2013/12/Jira2-840x515.jpg" width="840" height="515" />

&nbsp;

If you want to start leveraging your building information models more with Solibri Model Checker or have been searching for a better way to manage issues as they arise on a project, <a href="http://www.case-inc.com/contact">contact us @ CASE</a>.

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1164</wp:post_id>
		<wp:post_date>2013-12-23 15:35:43</wp:post_date>
		<wp:post_date_gmt>2013-12-23 20:35:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>solibri-magazine-2013-features-case</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[Analysis]]></category>
		<category domain="post_tag" nicename="bcf"><![CDATA[BCF]]></category>
		<category domain="category" nicename="bim"><![CDATA[BIM]]></category>
		<category domain="post_tag" nicename="case"><![CDATA[CASE]]></category>
		<category domain="category" nicename="coordination"><![CDATA[Coordination]]></category>
		<category domain="post_tag" nicename="ifc"><![CDATA[IFC]]></category>
		<category domain="category" nicename="interoperability"><![CDATA[Interoperability]]></category>
		<category domain="post_tag" nicename="jira"><![CDATA[Jira]]></category>
		<category domain="post_tag" nicename="solibri"><![CDATA[Solibri]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1167]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[76]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_video_meta</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:4:"type";s:7:"youtube";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_5752445</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[solibri]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>BCF Exporter for Navisworks 2014</title>
		<link>http://collectivebim.com/bcf-exporter-navisworks-2014/</link>
		<pubDate>Fri, 03 Jan 2014 03:57:40 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1192</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><img class="size-full wp-image-1205 aligncenter" alt="Navisworks BCF Exporter" src="http://collectivebim.com/wp-content/uploads/2014/01/Navisworks-BCF-Exporter.png" width="160" height="160" /></p>
At CASE, we often use Navisworks in addition to Solibri Model Checker. If you use either of these tools, you are aware that they are primarily analysis tools used for coordination and quality control. The primary output of these two tools for coordination are in the form of reports. Navisworks can report clashes in the form of TXT, HTML, and XML. Solibri Model Checker is capable of reporting issues as PDF, XLS, RTF, and BCF. Of all of these formats between the two software, BCF is the only format that contains a camera view. A camera view is crucial to pinpointing an issue inside a model. Trying to find the same location from an image is extremely time consuming. What is missing from this picture? A BCF Exporter for Navisworks!

&nbsp;

So with the assistance of <a href="http://matteocominetti.com/" target="_blank">Matteo's </a>crazy ninja programming skills, we developed a <a href="https://aec-apps.com/app/app/bcf-exporter-navisworks" target="_blank">FREE Navisworks Manage 2014 Add-in</a> that allows users to export viewpoints as a BCF! With this, you can share the issues you find in Navisworks Manage with people that are Solibri and Tekla BIMsight. With the <a href="http://www.kubusinfo.com/en/What-is-BCF" target="_blank">PAID Kubus' BCF Add-in</a>, you can review the issues in ArchiCAD and Revit. You can also review the issues in Revit with<a href="https://aec-apps.com/app/app/bcf-plugin-2-revit" target="_blank"> Matteo's FREE Revit BCF addin</a>! See what I mean about his crazy ninja skills?

&nbsp;

The workflow is simple. You can either create the viewpoints manually from any camera position, or you can generate the viewpoints as a report of a clash detection test. Since the BCF schema does not support multiple images per issue, the Add-in flattens any folder structure you have in the viewpoints window and treats each viewpoint as a potential issue. A great feature of Navisworks that is often under utilized is the comments feature. Comments added to clash results will be attached to a viewpoint if reported from the clash detective. Additionally, if a viewpoint was created manually, a comment can be added to the viewpoint after the fact by right clicking on the viewpoint in the viewpoint window.

&nbsp;

Before using the tool to export a BCF, be sure to set your desired image size for the snapshot. If you don't, the image will be 256 x 256. To change the image size, you have to enter the Advanced Global Options by Shift+Clicking the Global Options from either the Navisworks icon menu or by right clicking in the scene. Under Export, you will find "lcodpimage." Change the height and width to the desired size.

&nbsp;

When you run the Add-in, a window will appear that displays all the viewpoints in your model. Select which viewpoints you DO NOT want to export and remove them from the list with the button at the top. After clicking the Export Issues button and specifying a file name, the Add-in will cycle through all the viewpoints and capture the camera position, a snapshot, any comments associated with the viewpoint, and the GUIDs of all objects visible in the scene.

&nbsp;

The video below walks through a few workflows for using the tool. To install this tool, please use the CASE Add-in manager that can be found here: <a href="http://apps.case-inc.com/content/add-manager" target="_blank">http://apps.case-inc.com/content/add-manager</a>. While you are there, check out all the other FREE Add-ins we give away.

&nbsp;

[responsive_vid]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1192</wp:post_id>
		<wp:post_date>2014-01-02 22:57:40</wp:post_date>
		<wp:post_date_gmt>2014-01-03 03:57:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bcf-exporter-navisworks-2014</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[Analysis]]></category>
		<category domain="post_tag" nicename="bcf"><![CDATA[BCF]]></category>
		<category domain="category" nicename="bim"><![CDATA[BIM]]></category>
		<category domain="post_tag" nicename="case"><![CDATA[CASE]]></category>
		<category domain="category" nicename="coordination"><![CDATA[Coordination]]></category>
		<category domain="category" nicename="interoperability"><![CDATA[Interoperability]]></category>
		<category domain="post_tag" nicename="navisworks"><![CDATA[Navisworks]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_post_restored_from</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:20:"restored_revision_id";i:1194;s:16:"restored_by_user";i:2;s:13:"restored_time";i:1388626340;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_video_meta</wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"name";s:39:"BCF Exporter for Navisworks Manage 2014";s:4:"type";s:5:"vimeo";s:3:"url";s:25:"http://vimeo.com/82580658";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[97]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[BCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[This FREE Navisworks 2014 addin allows you to export viewpoints as a BCF! The workflow is simple, create the viewpoints manually or from a clash test.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[A little more info on the Free  #BCF Exporter for #Navisworks 2014 http://wp.me/p2ZTR1-je #openbim #IFC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1205]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_5752445</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Computational Design + Fabrication Workshop @ Tulane SOA</title>
		<link>http://collectivebim.com/computational-design-fabrication/</link>
		<pubDate>Tue, 04 Feb 2014 04:22:38 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1229</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignnone size-large wp-image-1281" alt="DSC04125_modify" src="http://collectivebim.com/wp-content/uploads/2014/01/DSC04125_modify-840x471.jpg" width="840" height="471" />

Personally, computational design is most rewarding when you have to rely on it to build something you would have otherwise never been able to accomplish both technically and aesthetically. This euphoria is exactly what I experienced during A-week at Tulane this past month.

&nbsp;

A-week, more formally known as Architecture Week,  is a student-organized tradition at the Tulane School of Architecture where a student committee selects visiting architects based off of their professional work to lead an intense design build effort in three days. This year, the architects consisted of Jason Kelly Johnson and Ripon Deleon from <a href="http://www.future-cities-lab.net/team/">Future Cities Lab</a>, Ronald Rael from <a href="http://www.rael-sanfratello.com/">Rael San Fratello</a>, Hart Marlow from <a href="http://www.su11.com/">su11</a>, and myself from <a href="http://www.case-inc.com/">CASE</a>. Hart, being my best friend from undergraduate, teamed up with me to lead one of the three groups.

&nbsp;

Tulane SOA summarizes the week as follows.
<blockquote>The objective is for the visiting architects to offer students a new perspective on the changing landscape of architecture, technology and culture. Over the span of three days, students participated in workshops led by the visiting architects that engage the students in learning new and innovative digital modeling processes, design charrettes and the full scale fabrication of a project. A-week is an important part of a student's education as its goal is designed to empower students with knowledge and methods that are redefining the future of the industry.</blockquote>
&nbsp;

Our workshop was a huge success. We had a group of 12-14 students, mostly 3rd year with a few upper year sprinkled in, all with no experience in Maya nor Grasshopper. What the students did have was an impressive work ethic, tolerance for each other, and a basic understanding of digital fabrication techniques.

&nbsp;

The focus of our workshop was on the design and fabrication of a full scale canopy that was informed by invoking dynamic site constraints. <span style="line-height: 1.5em;">Using the Dynamics Engine within Maya, students produced dynamic curve formations informed by their own site investigations of the Tulane Quad that self assemble into a dynamic system. When played out over time, this system progressively attracted to itself, or cling, resulting in dense cluster areas.</span>

<img class="alignnone  wp-image-1287" alt="Base Curves" src="http://collectivebim.com/wp-content/uploads/2014/01/Base-Curves.jpg" width="406" height="403" /> <img class="alignnone  wp-image-1288" alt="Dynamic Curves" src="http://collectivebim.com/wp-content/uploads/2014/01/Dynamic-Curves.jpg" width="382" height="411" /> <img class="alignnone  wp-image-1289" alt="Point Cling" src="http://collectivebim.com/wp-content/uploads/2014/01/Point-Cling.jpg" width="390" height="410" /> <img class="alignnone  wp-image-1290" alt="Clusters" src="http://collectivebim.com/wp-content/uploads/2014/01/Clusters.jpg" width="391" height="413" />

These clusters were analyzed based off of control point density and magic using Grasshopper. These clusters then formed the basis from which a structural system could be derived from. Using a series of custom Grasshopper tools built for the workshop and the dynamic curve system as a rig, the students formulated a layout. After the primary structural elements were designed, additional custom Grasshopper tools allowed the students to skin the structure by selecting which primary elements should terminate the span of a pedal. Since the primary structural elements could be at any angle, and since we need to bend the conduit with low tech equipment, a planar solution had to be developed. When the two terminating structural elements were selected, the tools generated a modifiable intermediate segment, derived by intersecting two planes. The result is the ability to create very complex shapes all while using only planar bent conduit. The skin, its profile, and its graphic was then mapped onto the structure using a third set of Grasshopper tools.

<img class="alignnone  wp-image-1294" alt="Structure Layout" src="http://collectivebim.com/wp-content/uploads/2014/02/Structure-Layout.jpg" width="354" height="336" />   <img class="alignnone  wp-image-1295" alt="Skin Layout" src="http://collectivebim.com/wp-content/uploads/2014/02/Skin-Layout.jpg" width="433" height="374" />

&nbsp;

<img class="alignnone  wp-image-1303" alt="persp2" src="http://collectivebim.com/wp-content/uploads/2014/02/persp2.jpg" width="437" height="291" />   <img class="alignnone  wp-image-1304" alt="persp3" src="http://collectivebim.com/wp-content/uploads/2014/02/persp3.jpg" width="362" height="299" />

At this stage, the students broke into two teams. A STRUCTURE team generated the output to fabricate and bend conduit tubes as structure. Using a mid-range conduit bender to form the conduit pipes into shape, a flat table and plywood as a plane to assemble, and 10 hands, the students were able to bend and assemble a unit in about 15 minutes.  I am always amazed at how well things come together when you follow the direct output of the model. Of course during assembly, it matters that you are as precise as you can possibly be during fabrication.

<img class="size-full wp-image-1301 aligncenter" alt="Conduit" src="http://collectivebim.com/wp-content/uploads/2014/02/Conduit.jpg" width="704" height="584" />

<img class="alignnone size-large wp-image-1244" alt="photo 2" src="http://collectivebim.com/wp-content/uploads/2014/01/photo-2-840x840.jpg" width="840" height="840" />

&nbsp;

The SKIN team then designed how the skin both looked and performed during the day.  After unrolling the skin/pedals using Grasshopper, Acrylic sheets were CNC milled. By replacing an end mill with a sharpie, the team used the CNC to draw a pattern on the pedals that were later scored with an knife. After painting the graphic on the pedals, they were riveted together on the ground before lifted into place to get riveted to neighboring pedals.

<img class="size-large wp-image-1300 aligncenter" alt="Pedals" src="http://collectivebim.com/wp-content/uploads/2014/02/Pedals-840x537.jpg" width="840" height="537" />

<img class="alignnone size-large wp-image-1243" style="line-height: 1.5em;" alt="IMG_0008" src="http://collectivebim.com/wp-content/uploads/2014/01/IMG_0008-840x630.jpg" width="840" height="630" /><span style="line-height: 1.5em;"><img class="alignnone size-large wp-image-1239" alt="Computational Design Meets Fabrication At Tulane SOA" src="http://collectivebim.com/wp-content/uploads/2014/01/DSC_0306-840x558.jpg" width="840" height="558" /><img class="alignnone size-large wp-image-1264" style="line-height: 1.5em;" alt="DSC_0021" src="http://collectivebim.com/wp-content/uploads/2014/01/DSC_0021-840x557.jpg" width="840" height="557" /><img class="alignnone size-large wp-image-1269" alt="DSC04235_modify" src="http://collectivebim.com/wp-content/uploads/2014/01/DSC04235_modify-840x471.jpg" width="840" height="471" /><img class="alignnone size-large wp-image-1268" alt="DSC04218_modify" src="http://collectivebim.com/wp-content/uploads/2014/01/DSC04218_modify-840x471.jpg" width="840" height="471" /><img class="alignnone size-large wp-image-1267" alt="DSC04201_moidfu" src="http://collectivebim.com/wp-content/uploads/2014/01/DSC04201_moidfu-840x471.jpg" width="840" height="471" /></span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1229</wp:post_id>
		<wp:post_date>2014-02-03 23:22:38</wp:post_date>
		<wp:post_date_gmt>2014-02-04 04:22:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>computational-design-fabrication</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="computational-design"><![CDATA[Computational Design]]></category>
		<category domain="category" nicename="fabrication"><![CDATA[Fabrication]]></category>
		<category domain="category" nicename="workshops"><![CDATA[Workshops]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[91]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_video_meta</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:4:"type";s:7:"youtube";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1231]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Computational Design]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Computational Design + Fabrication Workshop @ Tulane SOA collectiveBIM]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Computational design is most rewarding when you have to rely on it to build something you would have otherwise never been able to accomplish.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[Computational Design + Fabrication Workshop @ Tulane SOA http://wp.me/p2ZTR1-jP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Is Revit Dead? Well, with CASE Building Suite - YES</title>
		<link>http://collectivebim.com/revit-dead-well-case-building-suite-think/</link>
		<pubDate>Tue, 01 Apr 2014 11:14:10 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1310</guid>
		<description></description>
		<content:encoded><![CDATA[&nbsp;
<h2>Upset about Revit 2015?</h2>
As the release of Revit 2015 still leaves a sour taste in people's mouths, many are wondering if they should jump ship and move to another platform that the developers are taking more seriously. Well before you go backwards by switching to ArchiCAD or worse SketchUp, might I suggest you take a serious leap forward with building information by utilizing the recently launched CASE Building Suite. We listened to your complaints and truly understand your needs for a robust platform. We are proud to announce the public release of these tools. Below you will find a description from the product website.

&nbsp;

<img class="size-full wp-image-1311 aligncenter" alt="CASE BS" src="http://collectivebim.com/wp-content/uploads/2014/04/CASEBS.jpg" width="362" height="216" />

&nbsp;
<h2>Introducing The CASE BS Tools</h2>
We're rethinking the building process and today's tools just don't cut it. After extensive research and user-testing, we're excited to present the CASE Building Suite. Confident in its ability to speak to a diverse user group this suite offers the tactility and user-friendly approach that would make sense to anyone in the building process. Relinquish the disruptive technology that hinders project development and software licenses that can cripple a budget. Straightforward and simple, these tools will reimagine the building process with the added benefit of reducing IT costs.

&nbsp;

Follow the LINK BELOW<a href="http://www.case-inc.com/buildingsuite/"> </a>to find out more information on the tools including a short video highlighting their features!

&nbsp;

<a href="http://www.case-inc.com/buildingsuite/">http://www.case-inc.com/buildingsuite/</a>

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1310</wp:post_id>
		<wp:post_date>2014-04-01 07:14:10</wp:post_date>
		<wp:post_date_gmt>2014-04-01 11:14:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>revit-dead-well-case-building-suite-think</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bim"><![CDATA[BIM]]></category>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[Is #Revit Dead? Well, with the CASE Building Suite I think so...]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1311]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_video_meta</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:4:"type";s:7:"youtube";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Revit]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Revit 2015 still leaves a sour taste in people's mouths, many are wondering if they should jump ship and move to another platform. Well before you do, check]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_5752445</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[always]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>The Future of Issue Tracking for the AEC. Will it be AEC software?</title>
		<link>http://collectivebim.com/future-issue-tracking-aec/</link>
		<pubDate>Fri, 09 May 2014 00:44:48 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1322</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="aligncenter wp-image-1328 size-full" src="http://collectivebim.com/wp-content/uploads/2014/05/Issue-Tracking-e1399595905871.png" alt="Issue Tracking" width="779" height="334" />

More often than not, projects are now requiring that the design and construction models undergo a clash detection analysis. At the moment this process is manually performed after the modeling has occured. Hopefully modeling software will soon just include clash detection logic, so as we are modeling it can tell us “Hey, there is a giant beam here! Don’t place that duct here will you?” Until then we have to use specialised analysis software to help us find those areas where we did not coordinate properly with our consultants.

&nbsp;

<b><i>Discovering clashes</i></b> in design and construction models is a relatively common capability of software used by the AEC industry. However, once a clash is found, there are only a few options for reporting and monitoring the clash’s lifecycle. In most software, the developers expect you to manage the recurring clashes and attached meta-data solely within the software – packed away in a module that is inaccessible to any non-savvy unsubscribed software user. In some software you are forced to share clashes and attached meta-data via a single file (Excel, BCF, HTML) in order to share with users using different tools. These are not acceptable implementations for real situations.

&nbsp;
<h1>Why issue tracking in the first place?</h1>
Issue Tracking, or bug tracking, is a quality assurance process commonly used by software developers and support centers. At CASE, we make no distinction between tracking “bugs” in our software and tracking “coordination issues” in buildings we are involved with. We regularly set out the BIM strategy and provide BIM Management on projects where issue tracking plays an enormous role for monitoring the implementation of a project’s BIM process. Issue tracking is essentially the main component of the Monitoring and Controlling phase, the phase that runs concurrently with the Execution phase of the project.

&nbsp;

Issue tracking as a process is not new to the building industry. It happens on most construction projects and can result in formal communications sent as Requests For Information (RFIs) that are usually directed at the design team for input and resolution. Instead of waiting to find issues on site, we now use analysis software to find issues like geometric conflicts much earlier in the design and construction process. As a result, the issue tracking process, and the value it brings, has been pushed further upstream into the design process.

&nbsp;

When a model is analyzed during the design phase, a clash detection analysis might identify tens of thousands of clashes. A clash is a singular instance where two geometries are occupying the same space or do not maintain a required distance. At CASE, we make a clear distinction between what is a clash and what is an issue. A clash lets us know that our requirements are not met. An issue is an action item distributed to the team that defines the underlying reason why there is a clash. An issue can be a single clash, but is more often than not a group of clashes.

&nbsp;

So what value does issue tracking actually bring? Well, when issues are found, they need to be communicated to the team. The information about the issue, or meta-data, becomes extremely important to also track in order for others to understand the issue. Information like where is the issue located in the building? Who is involved in the issue? Who should take ownership to resolve this issue? How critical is this issue at this point in time? Is this a new issue or an existing issue? How long has this issue been unresolved? The value that issue tracking brings is the ability to capture, share, and monitor the data vital to resolving the issues.

&nbsp;

Once the issues are identified and delivered to the team, the parties involved will discuss how to resolve the issues. Often this discussion occurs through emails, RFIs, and in person meetings. Ideally these discussions should be captured and associated with the issues so that there is an accessible and transparent history to how an issue is being resolved.

&nbsp;

In addition to the value that issue tracking brings during coordination, it also offers the opportunity to identify larger overall management trends. With a database of issues at hand, it is possible to see which design decisions caused the most conflicts, which issues were the most time consuming, and which problems caused a delay in the project schedule. When done properly, issue tracking is not only about improving buildings, it is also about improving design processes. At CASE we have developed a process for tracking issues that automatically provides us with this level of feedback. This provides CASE with an amazing understanding of all the projects, and more importantly the process, allowing us to continually advance the way we deliver projects.

&nbsp;
<h1>Traditional ways for issue tracking in the AEC</h1>
There are three common methods we have seen used for tracking issues in the building industry. The first – and the worst – is reporting via email. There is no need to go into why this is a bad idea. It should be clear from the fact that you often manage 300-3000 issues on a medium size project. How many emails does that equal? Often email is used to send reports generated by the analysis software. The report formats vary from HTML to PDF to Excel reports. The downside of these file based reports is that they are not bidirectional. They are simply snapshots of the issues at a moment in time. You cannot comment on them, change the status, or assign an issue to a user and feed that new information back into the system. Email is a dead end.

&nbsp;

The second method is to maintain a running list of issues inside a spreadsheet. This is a very common method and if set up properly it can be a fairly efficient way to manage a small number of issues. However, managing thousands or even hundreds of issues over the life of a project using a spreadsheet can quickly turn into a full time job. With field formats, macros, and charting, you can configure an informative and flexible system for issue tracking. It is however still a manual data entry task and a manual coordination process that is time consuming and subject to user-input errors.

&nbsp;

With both of these methods – email and spreadsheet – you are separated from the model environment and forced to work with images and text. Sure you could exchange the entire model file or add a url to the issue that directs the user to a cloud hosted model on Autodesk 360 Glue, but this would have to be done manually.

&nbsp;

The third method is to use coordination analysis software. The software vendors expect you to manage all the issues solely inside their analysis software. I truly wish this was actually possible. The workflow prescribed to us does not work in a real world scenario. The features favor finding clashes over managing them. With the few capabilities the software does have for managing issues, it keeps hidden from the rest of the team. To get a bit technical, in tools like Autodesk Navisworks and Autodesk 360 Glue, access to the results/issues are hidden from anyone who does not have the paid/full version of the software. In order for the issues to be seen in free viewers, the issues have to be added as viewpoints/slides or reported as HTML or PDF. This means we have to manage the issues in multiple places. Solibri Model Checker rises above the rest when it comes to seeing the analysis results. All results of a check can be seen in the free Solibri Model Viewer. However, every coordination analysis software on the market, including Solibri Model Checker, Autodesk Navisworks, and Autodesk 360 Glue, fall short in integrating the ability to properly track and manage issues in a real world environment.

&nbsp;

At a minimum, a proper issue tracking method should include the ability to:
<ul>
	<li>define the type of issue (clash, data deficiency, model craft)</li>
	<li>store meta-data about an issue (priority, location, date found)</li>
	<li>take an issue through a defined workflow / change of status</li>
	<li>manage comments from multiple parties</li>
	<li>define who is responsible for resolving the issue</li>
	<li>keep all information above intact throughout model development</li>
	<li>be accessed by entire team regardless of their platform or experience.</li>
</ul>
&nbsp;
<h1>AEC Software get us half way there.</h1>
Each AEC software handles the results of a model check differently. None of them, in my opinion, handle them very well. Most programs give you a tremendous amount of freedom in organizing data to analyze. On the other hand, none give you the capability to organize the results in a practical way. You may be saying, well Navisworks has a grouping functionality! The ability to group clashes is fantastic; however, retroactively grouping a giant dump of clashes is not efficient nor fun. It’s likes dumping a container full of LEGOs on the floor and being told you have to sort them by type and color. It gets us half way there. There has to be more intelligence built in.

&nbsp;

When Autodesk 360 Glue came out, it democratized clash detection by allowing anyone capable of uploading models to press four buttons and receive a ton of results. Although generating results is easier, understanding what the results mean is actually harder. It also lacks grouping functionality in its current state, but look on the bright side! You can email all 1000 clashes to your team directly from the software! It gets us half way there faster.

&nbsp;

Solibri Model Checker is a lot more intelligent in how it groups issues for you. Since Solibri knows which rule you are running and what results to expect, it does quite a bit of grunt work for you by grouping clashes by level, or by selection type, or by object type. This automatic grouping, however, is only customizable on 2% of its rulesets. Oddly enough, what is missing from Solibri Model Checker is the ability to group clashes into larger issues that behave like a singular issue. It again gets us half way there.

&nbsp;

Aside from those limitations of the most common AEC software, there is a larger problem with how every coordination analysis software on the market handles the life cycle of a clash. This one is a bit trickier and more difficult to solve. When issues are found with model elements, the issue lives and dies with the life of the model elements. If a duct element that was causing 50 clashes is deleted and redrawn, those 50 clashes will be marked as resolved and any meta-data associated with those clashes will go with it. If the new duct element doesn’t actually resolve the clashes, 50 brand new clashes will be created and will need to be grouped into an issue again. Why is this still a thing? Why can’t the software know that we just deleted the duct, redrew it, and that it is essentially the same issue? The clashes are roughly in the same location and involve the same element types. We need to move beyond clash detection based on geometry GUIDS and towards intelligent issue recognition that is only lightly connected to the geometry and free to live at a higher level.

&nbsp;

With all this criticism being thrown around – and at very specific software – I want to make it clear that we hope it is interpreted constructively. We want don’t want to bring the tools down, we want to help make them better. CASE uses most of the ones discussed in this article daily on live projects. We care deeply about them and we have been working to help our clients and the industry find the best way to use them. We are continuing to test and improve our processes. There is a better way.

&nbsp;

<a href="http://collectivebim.com/future-issue-tracking-bcf/">Next, let’s look into how the OpenBIM movement plans to solve this industry problem with BCF, BIM Collaboration Format!</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1322</wp:post_id>
		<wp:post_date>2014-05-08 20:44:48</wp:post_date>
		<wp:post_date_gmt>2014-05-09 00:44:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>future-issue-tracking-aec</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[Analysis]]></category>
		<category domain="post_tag" nicename="autodesk"><![CDATA[Autodesk]]></category>
		<category domain="category" nicename="coordination"><![CDATA[Coordination]]></category>
		<category domain="post_tag" nicename="excel"><![CDATA[Excel]]></category>
		<category domain="category" nicename="issue-tracking"><![CDATA[Issue Tracking]]></category>
		<category domain="post_tag" nicename="jira"><![CDATA[Jira]]></category>
		<category domain="post_tag" nicename="navisworks"><![CDATA[Navisworks]]></category>
		<category domain="category" nicename="none"><![CDATA[none]]></category>
		<category domain="post_tag" nicename="smc"><![CDATA[SMC]]></category>
		<category domain="post_tag" nicename="solibri"><![CDATA[Solibri]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_video_meta</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:4:"type";s:7:"youtube";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Issue Tracking]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[88]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[The Future of Issue Tracking for the AEC. Will it be AEC Software?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Discovering clashes in design and construction models is a relatively common capability of software used by the AEC industry. Issue tracking, not so much.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1328]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[The Future of Issue Tracking for the AEC. Will it be AEC software? http://wp.me/p2ZTR1-lk]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[future-issue-tracking-aec-will-aec-software-vendors-provide-solution-moment]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_2444900</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_5752445</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>The Future of Issue Tracking for the AEC. Will BCF be a solution?</title>
		<link>http://collectivebim.com/future-issue-tracking-bcf/</link>
		<pubDate>Thu, 17 Jul 2014 16:00:42 +0000</pubDate>
		<dc:creator><![CDATA[michael]]></dc:creator>
		<guid isPermaLink="false">http://collectivebim.com/?p=1332</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="size-full wp-image-1336 aligncenter" src="http://collectivebim.com/wp-content/uploads/2014/07/BCFicon128.png" alt="BCF" width="128" height="128" />

In the last post, I briefly talked about the importance of issue tracking, and the current limitations of issue tracking within modern AEC applications. Now I’d like to take a look at one of the proposed improvements to issue tracking, the BIM Collaboration Format, or BCF if you are cool. Advocates of OpenBIM argue that this format will allow us to more easily exchange and manage issues in AEC applications, but I’m not so sure…

&nbsp;

&nbsp;
<h1>What up BCF?</h1>
In 2010, Tekla and Solibri collaboratively developed the BIM Collaboration Format (BCF) in an attempt standardize how issues are shared between various authoring and analysis software used in the building industry. Essentially, it is an exchange format with xml roots that contains images, camera positions, comments, and basic meta-data like status, assignee, elements involved, and authors. In theory you should be able to identify an issue in Tekla, save it as a BCF file, open the file in Solibri, and see exactly the same issue appear on screen with the ability to add a comment that can then be shared back to Tekla.

&nbsp;

The original BCF concept is fantastic! However, in the last two years or so, BCF has transformed from a simple format that transfers comments attached with views, into a format that is fully capable of documenting and sharing issues found throughout the building process. We see a lot of potential in BCF as an exchange format, but not as the solution to track the lifecycle of issues.

&nbsp;

We see BCF playing a huge role in carrying a ton of valuable information about an issue between a database and various applications. Is BCF ready to do that now? In my opinion, it’s too limited right now. Could BCF become the widely adopted format for exchanging issues throughout the project? Absolutely. The current limitation of BCF, specifically version 1.0, lies in both its schema and its implementation by vendors.

&nbsp;

&nbsp;
<h1>BCF Schema Limitations</h1>
There is always room for improvement. The highest priority when BCF was developed was to prove the format could transfer issues between software, so I understand why there are some loose ends; however, with the BCF 2.0 under development, I hope there is a serious review of 1.0. We have been developing applications that generate a BCF over the past year and we have ran into numerous limitations with the schema, which has caused us to extend the schema by not only adding fields, but also accounting for the deficiencies in BCF 1.0 and for the poor implementations of BCF within Tekla and Solibri.

&nbsp;

The BCF schema is really straightforward. A “BCF” file is actually a filetype of .bcfzip which is a zipped folder of folders. The folders inside the bcfzip are named after each issue’s GUID. Inside those folders are 3 files – a markup.bcf, a snapshot.png, and a viewpoint.bcfv. The markup.bcf is where most of the information about an issue resides. In a markup.bcf, you can access information about the models used, about the issue, and about each comment on the issue. The viewpoint.bcfv contains all the information about the camera, about the elements in the view, and the software used. An example of both the markup.bcf and viewpoint.bcfv under the BCF 1.0 schema generated by Solibri look like this:

&nbsp;
<h5>Markup.bcf</h5>
<h3><img class="alignnone size-full wp-image-1339" src="http://collectivebim.com/wp-content/uploads/2014/07/BCF-Schema.jpg" alt="BCF Schema" width="702" height="523" /></h3>
<h5>Viewpoint.bcfv</h5>
<img class="alignnone size-full wp-image-1340" src="http://collectivebim.com/wp-content/uploads/2014/07/BCF-Schema_bcfv.jpg" alt="BCF Schema_bcfv" width="771" height="450" />

&nbsp;

&nbsp;
<h3>Opportunities For Improvement</h3>
So how can the schema be improved? Well the following are just a handful of opportunities for improvement. Lets start with the Markup.bcf.

&nbsp;
<h5>Markup.bcf</h5>
<ul>
	<li><strong>Issue title / Topic</strong> does not have a property to order the issue in a sequential way. Instead, the only ID for the Issue is a GUID, which when sorted it sorts in a random order. Since this does not exist, there is no way to refer someone to a specific issue like Issue #24 no matter if the issue is in Solibri, Tekla, Revit, etc.</li>
	<li><strong>Comments</strong> have statuses instead of the issue having the status. A lot of the time, the properties of the last comment drive the properties of the issue. This requires a high degree of confidence of any person that makes a comment on an issue. If they make a comment and keep the default status or choose the wrong status, that wrong status will now replace any status set before the comment was added.</li>
	<li><strong>Status</strong> is a bit confusing and is often not used. There are four predefined values for Status - Info, Error, Warning, and Unknown. Neither Tekla or Solibri actually use this property, which begs the question - should it be deleted? In replace of Status, most software vendors use Verbal Status because it is more helpful and can be set to any value the user defines.</li>
	<li><strong>Priority</strong> of an issue is not supported. During coordination, there are issues that are critical and issues that are very minor. Having the ability to attach a priority to an issue in BCF would be useful. Without priorities, you are left to sift through a larger collection of issues that may be irrelevant to you.</li>
</ul>
&nbsp;
<h5>Viewpoint.bcfv</h5>
<ul>
	<li><strong>Component</strong> information is captured in the Viewpoint.bcfv to allow the isolation or selection of components involved in an issue. There is however no distinction of whether the component captured is a Selected component, a Visible component, or a Highlighted component. I think there needs to be support for all three of these options instead of the option being left up to the vendor to decide which to implement. As you will see in the implementation inconsistencies below, this does not work out well.</li>
	<li><strong>Camera</strong> information is also captured that helps define whether the view is an orthogonal or perspective view. One property that is very undefined is the “ViewToWorldScale.” Currently it is a single value to represent the scale, but as you can guess the scale of a view in Solibri is very different from the scale of a view in Tekla which then does not exist for a view in Revit and Navisworks. A lack of definition around this requires workarounds to get the view mostly identical.</li>
	<li><strong>2d views</strong> are not supported, but it seems to be an area that 2.0 will support. Currently there are a few tools, including the tools Matteo has built that extend the schema to support 2d views. These BCFs though would not work with any other platform that supported BCF without having a plugin that understood the extended version of BCF.</li>
	<li><strong>Markup</strong> information is not supported. Orienting a camera is valuable, but you often have to add text, bubbles, and dimensions to the view to further explain what the real issue is. Capturing those markups can add a lot of value when transferring from platform to platform. If the markup information is only captured in a single image, there is a risk that the markup information can be deleted by updating the snapshot. Supporting markup information though can be a tough task as it requires the platforms to expose that information. It gets even more complex when you realize that some tools markup views in 3d while others markup directly on the camera plane.</li>
	<li><strong>Multiple Viewpoints</strong> and Snapshots are not supported. This for me is a big one. No one likes to review thousands of issues when they are essentially 10 issues. I talked about this in the previous post about the granularity of an issue. A picture is worth a thousand words but 2-5 pictures tells a story. It also lessens the load of managing issues.</li>
</ul>
&nbsp;

&nbsp;
<h1>BCF Implementation Inconsistencies</h1>
Even though Tekla and Solibri were the original developers, the two vendors implemented BCF in different ways! What do I mean? For example, if you export a BCF of the same model of the same issue from Tekla and from Solibri, the BCF will have different values and structured slightly differently. Even worse, if you export a BCF from Solibri and import it right back in, data is lost and issues are sorted in a random order.

&nbsp;
<ul>
	<li><strong>Camera:</strong> When sending a BCF between Solibri and Tekla, camera positions do not match due to a fundamental difference between how the two software generate camera views.</li>
	<li><strong>Components:</strong> Solibri and Tekla also differ on what elements are captured in the viewpoint.bcfv file. For example, Solibri captures the Element IDs of all Visible Elements in the view (could be 10,000) while Tekla captures the Element IDs of all the Selected Elements.</li>
	<li><strong>Issue Title:</strong> Solibri has no Issue Title. Instead it takes the value of the first comment on a slide. Because comments can be long, Solibri takes a maximum of 20 characters from the comment and applies it as the Issue Title when exported as a BCF. Tekla’s Issue Title is labeled Comment.</li>
	<li><strong>Issue Status:</strong> Both Solibri and Tekla use Verbal Status instead of Status. In Tekla, the Issue Status is labeled as Tag.</li>
	<li><strong>Issue vs Note:</strong> The name of a BCF issue varies. Solibri appropriately calls it an Issue, but Tekla calls an Issue a Note.</li>
</ul>
&nbsp;

It is very surprising that though the two originally developed the schema, they interpret it differently. This causes confusion when both working within the various platforms and when developing workflows between them. Is this an issue with the schema or an issue with the implementations?

&nbsp;

Unfortunately, both Revit and Navisworks do not natively support BCF. There have been a few addins that have been created though. <a href="http://matteocominetti.com/category/app-updates/bcf-revit-plugin/">Matteo’s free Revit addin</a> and <a href="http://apps.case-inc.com/content/free-bcf-exporter-navisworks-manage">CASE’s free Navisworks addin</a> (by <a href="http://www.case-inc.com/users/mcominetti">Matteo</a>) both tap into the software’s API in order to create and read a BCF. I just wish Solibri had an API.

&nbsp;

&nbsp;
<h1>Latest BCF Developments</h1>
As I mentioned before, we are interested to see how BuildingSmart will improve BCF as they flush out the 2.0 schema. We know how we would fix it. A number of the issues I mentioned above with the 1.0 schema are being addressed in 2.0. We are particularly excited about the multiple viewpoints per issue and support for issue markups, although the issue markups is in 3d instead of 2d. The documentation for BCF 2.0 can be found here: <a href="https://github.com/BuildingSMART/BCF/tree/master/Documentation">https://github.com/BuildingSMART/BCF/tree/master/Documentation</a>

&nbsp;

Another development in the works is a project called <a href="https://github.com/opensourceBIM/BimConsiderationForum-BcfServer/wiki/BCF-server">BCF Server</a> by the <a href="http://opensourcebim.org/mission/">OpenSource BIM Collective</a>. Equipped with a web service API, it is a plugin for Wordpress that allows you to use Wordpress, a content management system, as a makeshift BCF repository. I have to say I am interested to see where this one goes, especially since it is connecting to BIMserver.org.

&nbsp;

&nbsp;
<h1>Soooo… what are you saying?</h1>
At the end of the day, as great as BCF is, it is just a file format and not a central repository. It is the way we structure issues as xml data and not how we track issues. We need to be able to rely on it to move our issues, and any data we find worthy to ship with them, to the application of our choice. In BCF’s current state, it requires extending the schema and developing exceptions to account for poor implementations.

&nbsp;

The resting place of an issue and its data belong in a database where we can gain a higher understanding of the project by analyzing the interrelated data. Next I’ll show you how we at <a href="http://www.case-inc.com/">CASE</a> approach issue tracking by extending the software we use to find the issues, using BCF where we have to, and by customizing tools used by other industries.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1332</wp:post_id>
		<wp:post_date>2014-07-17 12:00:42</wp:post_date>
		<wp:post_date_gmt>2014-07-17 16:00:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>future-issue-tracking-bcf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="analysis"><![CDATA[Analysis]]></category>
		<category domain="post_tag" nicename="bcf"><![CDATA[BCF]]></category>
		<category domain="category" nicename="bim"><![CDATA[BIM]]></category>
		<category domain="category" nicename="coordination"><![CDATA[Coordination]]></category>
		<category domain="category" nicename="issue-tracking"><![CDATA[Issue Tracking]]></category>
		<category domain="post_tag" nicename="navisworks"><![CDATA[Navisworks]]></category>
		<category domain="post_tag" nicename="revit"><![CDATA[Revit]]></category>
		<category domain="post_tag" nicename="solibri"><![CDATA[Solibri]]></category>
		<category domain="post_tag" nicename="tekla"><![CDATA[Tekla]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_catalyst_layout</wp:meta_key>
			<wp:meta_value><![CDATA[catalyst_default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_video_meta</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:4:"type";s:7:"youtube";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_twitter_user</wp:meta_key>
			<wp:meta_value><![CDATA[@mcc_une]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_thumbnail_id</wp:meta_key>
			<wp:meta_value><![CDATA[1336]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[BCF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[The Future of Issue Tracking for the AEC. Will it be BCF?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[As great as BCF is, it is just a file format and not a central repository. It is the way we structure issues as xml data and not how we track issues.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_mess</wp:meta_key>
			<wp:meta_value><![CDATA[The Future of Issue Tracking for the AEC. Will #BCF be a solution? #openBIM http://wp.me/p2ZTR1-lu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_done_all</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1797</wp:comment_id>
			<wp:comment_author><![CDATA[michael]]></wp:comment_author>
			<wp:comment_author_email>michael@collectivebim.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.228.201.167</wp:comment_author_IP>
			<wp:comment_date>2014-07-25 11:46:28</wp:comment_date>
			<wp:comment_date_gmt>2014-07-25 15:46:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Trey, 

It's nice to see you have been looking at Hansoft. It does a lot of things and IMHO it tried to solve too much with one platform, kind of like Newforma. I understand what you are after in terms of connecting the model to the issue. I have come to realize that there are things you need to be a hard connection and others to be a soft connection. We have made a ton of progress in streamlining the coordination process by using software like Jira and Hansoft. My next post will go through a lot of that work. It should be pretty exciting. Stay tuned as I develop the best way to describe it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1795</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406303188.77558803558349609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1795</wp:comment_id>
			<wp:comment_author><![CDATA[Trey Lane]]></wp:comment_author>
			<wp:comment_author_email>trey.lane.1@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.220.57.4</wp:comment_author_IP>
			<wp:comment_date>2014-07-25 10:39:49</wp:comment_date>
			<wp:comment_date_gmt>2014-07-25 14:39:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It would seem that, internally, the software development industry has already incorporated an issue focused mentality into their own workflow.  A software “bug” may be related to a single line of code, but tracking a “bug” often results in following the problem through many other parts of the program.

Lately, I've been taking a heavy look at a collaboration management software called Hansoft.  Hansoft’s management of man hours and bugs/issues seems very appropriate for a BIM environment (or any complex collaborative design process).  

The big concern I have about incorporating Hansoft (or a similar product from the software development world) is the lack of integration with our BIM model.  Sure, I can take screenshots and attach them to a pending bug/issue, but a screenshot is a one-way, dead link to that issue. 

You’ve mentioned that CASE has drawn a lot of influence from the way tech. companies operate, and it may be that your next post is heading in this direction.  Perhaps CASE has developed a nifty workflow/interoperability software to integrate the model awareness of BCF into a management level tool like Hansoft?  One can only hope!

I'll be keeping an eye out for that next post.

-Trey Lane]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406301552.62479496002197265625;s:7:"message";s:46:"michael changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406299189.48303890228271484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1746</wp:comment_id>
			<wp:comment_author><![CDATA[michael]]></wp:comment_author>
			<wp:comment_author_email>michael@collectivebim.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>166.137.88.150</wp:comment_author_IP>
			<wp:comment_date>2014-07-21 18:20:49</wp:comment_date>
			<wp:comment_date_gmt>2014-07-21 22:20:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the additional information Jeffrey! Please feel free to reach out to us at CASE.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1745</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405981249.1421630382537841796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1745</wp:comment_id>
			<wp:comment_author><![CDATA[Jeffrey W. Ouellette]]></wp:comment_author>
			<wp:comment_author_email>Jouellette@vectorworks.net</wp:comment_author_email>
			<wp:comment_author_url>http://Sojointheefforttomakeitbetter</wp:comment_author_url>
			<wp:comment_author_IP>107.77.64.24</wp:comment_author_IP>
			<wp:comment_date>2014-07-21 16:33:08</wp:comment_date>
			<wp:comment_date_gmt>2014-07-21 20:33:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I appreciate your feedback regarding BCF. In a very short period of time, it went from a concept to a working prototype and then 1.0 release. All this work happened with the support of buildingSMART International, more specifically, the Implementation Support Group (ISG). The ISG is where any vendor supporting IFC is invited to participate, with their industry peers, including Autodesk, Trimble, Nemetschek, and Solibri, to discuss such projects as BCF, among others. As Deputy Chair of the ISG, I would invite you to join buildingSMART International and welcome you to participate in the group. In this way, your expertise can be aggregated with many other very smart and driven colleagues to make BCF, web services, IFC, as well as other projects, successful.

Best regards,
Jeffrey W. Ouellette, Assoc. AIA, IES
Global Product Marketing
Nemetschek Vectorworks, Inc.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405974788.3216850757598876953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405981095.724523067474365234375;s:7:"message";s:46:"michael changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"michael";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>
